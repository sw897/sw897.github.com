<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>sw897's blog</title>
 <link href="http://sw897.github.io/" rel="self"/>
 <link href="http://sw897.github.io"/>
 <updated>2014-02-21T16:48:39+08:00</updated>
 <id>http://sw897.github.io</id>
 <author>
   <name>sw897</name>
   <email>sunwei.r@gmail.com</email>
 </author>

 
 <entry>
   <title>基于Jekyll Bootstrap的博客SEO优化</title>
   <link href="http://sw897.github.io/2014/02/20/jekyll-bootstrap-seo"/>
   <updated>2014-02-20T00:00:00+08:00</updated>
   <id>http://sw897.github.io/2014/02/20/jekyll-bootstrap-seo</id>
   <content type="html">&lt;p&gt;写博客是为了共享与交流，但一个新博客，其搜索、关注度都很低。 这就要想想是为什么了？当然，最重要的一点，博客需要创造价值内容，没有内容就没有价值， 从而没有阅读，没有评论，没有交互。但对于一个新博客，如果不是靠&lt;code&gt;ctrl+c&lt;/code&gt;与&lt;code&gt;ctrl+v&lt;/code&gt;起家，由于时间短，内容是不会太多的。这个第一步怎样走出去？ 外事问Google，搜索了一下SEO(搜索引擎优化)，看看大家有什么好的办法。这里记录一下本博针对SEO做的调整。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;固定链接&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;修改_config.yml中的permalink，去掉category，防止整理文章时， 修改category后会造成404链接，修改后如下： permalink: /:year/:month/:day/:title&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;posts的URL使用英文&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;jekyll bootstrap中使用&lt;code&gt;rake post title=&amp;quot;xxx&amp;quot;&lt;/code&gt;命令创建post时，创建的markdown文件中会自动把中文去掉，开始认为是对中文支持不好，每每都要rename一下。虽然当前搜索引擎都支持中文，但看到那一串的不能识别的编码后的字符，自己看google analytics时也会不爽，统一改为英文和分割线结构，好看又好记。如本篇&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http://sw897.github.io/2014/02/20/jekyll-bootstrap-seo&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;完善meta信息，title,description,keywords一个都不能少&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;使用rake创建的post，会在头部自动增加title与description配置,写文章时一定要补全，这样使jekyll会自动添加目标html中。&lt;/p&gt;

&lt;p&gt;至于keywords，虽然都说由于大家的滥用，搜索引擎降低其作用，但了胜于无，加上无坏处。 打开&lt;strong&gt;Rakefile&lt;/strong&gt;,在69行增加如下代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;post.puts &amp;#39;keywords: &amp;quot;&amp;quot;&amp;#39;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样下次再使用rake命令创建post时会自动增加keywords声明。然后修改自己在用的模板主文件。我这里是&lt;code&gt;_includes/themes/twitter/default.html&lt;/code&gt;，增加如下：&lt;/p&gt;
&lt;script src=&#39;https://gist.github.com/sw897/b6c9d9aa30cc72a95f3d.js&#39;&gt;&lt;![CDATA[]]&gt;&lt;/script&gt;
&lt;p&gt;这样，会在生成html中增加keywords的meta信息。&lt;/p&gt;

&lt;p&gt;另外，title默认是文章标题，可以修改模板，增加博客主题内容，我的修改如下，这样在生成的所有页面中，title的内容为title之后加上&lt;strong&gt;sw897&amp;#39;s blog&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;title&amp;gt; page.title | sw897&amp;#39;s blog&amp;lt;/title&amp;gt;&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;sitemap.txt转为sitemap.xml&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;jekyll bootstrap里自带有sitemap.txt，对于sitemap.txt与sitemap.xml的优劣，这里有篇&lt;a href=&quot;https://forums.digitalpoint.com/threads/xml-vs-txt-sitemap.114286/&quot;&gt;文章&lt;/a&gt;有讨论， 大体读了一下，大部分人的意思就是xml的比txt的强，既然如此，改一下又不麻烦，删除sitemap.txt，创建sitemap.xml，内容如下：&lt;/p&gt;
&lt;script src=&#39;https://gist.github.com/sw897/b1974e27b1f6309d9656.js&#39;&gt;&lt;![CDATA[]]&gt;&lt;/script&gt;
&lt;ul&gt;
&lt;li&gt;增加robots.txt&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;robots.txt是一种存放于网站根目录下的ASCII编码的文本文件，它通常告诉网络搜索引擎的漫游器（又称网络蜘蛛），此网站中的哪些内容是不应被搜索引擎的漫游器获取的，哪些是可以被（漫游器）获取的，以上摘自&lt;a href=&quot;&quot;&gt;robots.txt维基百科&lt;/a&gt;。在根目录下创建robots.txt，内容如下即可：&lt;/p&gt;
&lt;script src=&#39;https://gist.github.com/sw897/ccd18f95beaa7bb6aec4.js&#39;&gt;&lt;![CDATA[]]&gt;&lt;/script&gt;
&lt;ul&gt;
&lt;li&gt;增加外链&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在SEO中，外链能够极大的增加网站权重，让网站关键词有好的排名，这是因为搜索引擎是通过外链和锚文本来抓取网页内容的，增加外链能增加网站的曝光度，使网站权重得到提升。具体方法有很多，这里只简单设置一下，在自己github,bitbuck,google+,facebook,twitter里都增加网站链接，虽然不多，但可以让关注的人全面了解一下。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;持之以恒&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;最后，也是最重要的，坚持! 自勉！&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>使用Sublime Text 3做Python开发</title>
   <link href="http://sw897.github.io/2014/02/13/sublime-text-3-for-python"/>
   <updated>2014-02-13T00:00:00+08:00</updated>
   <id>http://sw897.github.io/2014/02/13/sublime-text-3-for-python</id>
   <content type="html">&lt;h3 id=&quot;&quot;&gt;引言&lt;/h3&gt;

&lt;p&gt;刚转到OS X平台时，寻找写Python,JavaScript,Markdown等文件的工具时，比较了许多工具， 最终选择了Sublime Text 2，主要原因是其跨平台， 想着以后再转到windows下开发时，不需要再重新适应其他工具。 Sublime Text 2学习曲线不像Vim那么陡峭，但想用得顺手，还是需要时间。在使用Sublime Text 2以后，还是有一段时间在怀念Notepad++的各种好，幻想notpad++明天会有OS X版本。 这段时间过后，越来越感觉到Sublime的强大，notepad++开始淡出了记忆。 Sublime Text 3的beta版本推出很长时间了，但其中文介绍文档非常少，多数介绍也只是停留在如何安装Package Control上，对开发相关插件介绍很少。正因为如此，许多人都在担心自己使用的plugins还不支持版本3，于是就一直不进行升级，我也是这种心态的其中一个。 这段时间有空，终于决定折腾一下。&lt;/p&gt;

&lt;p&gt;开始之前，看到&lt;a href=&quot;https://sublime.wbond.net&quot;&gt;Package Contorl网站&lt;/a&gt;上的一张统计图，给自己吃了个定心丸&lt;/p&gt;

&lt;p&gt;&lt;img alt=&#39;sublime text package control stat&#39; src=&#39;https://dl.dropboxusercontent.com/u/57451074/github/sw897/images/sublime_pc_stat.png&#39; /&gt;&lt;/p&gt;

&lt;p&gt;可以看到，绝大部的插件已完成3版本的兼容，而且还有少量专为3定制的新插件。所以，大家可以放心转到3版本上来试用了。后面介绍的python开发环境支持插件就是从Sublime 3独有，具体是哪个这里暂不解密。&lt;/p&gt;

&lt;p&gt;当然，不排除有些奇葩插件还不支持3版本，但如果这样，我的建议就是把那个插件换掉吧，更新这么不及时，一定不是最合适的了。&lt;/p&gt;

&lt;h3 id=&quot;package_control&quot;&gt;安装Package Control&lt;/h3&gt;

&lt;p&gt;现在Sublime Text 3的安装方法和版本2一样，只是粘贴的代码内容稍有不同，在&lt;a href=&quot;https://sublime.wbond.net&quot;&gt;Package Contorl网站&lt;/a&gt;上有安装方法。使用快捷键&lt;code&gt;ctrl+`&lt;/code&gt;或通过菜单选项&lt;code&gt;View &amp;gt; Show Console&lt;/code&gt;进入控制台Console，然后粘贴如下代码，回车运行。&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;python&#39;&gt;&lt;span class=&#39;kn&#39;&gt;import&lt;/span&gt; &lt;span class=&#39;nn&#39;&gt;urllib.request&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;,&lt;/span&gt;&lt;span class=&#39;nn&#39;&gt;os&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;,&lt;/span&gt;&lt;span class=&#39;nn&#39;&gt;hashlib&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;h&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;s&#39;&gt;&amp;#39;7183a2d3e96f11eeadd761d777e62404e330c659d4bb41d3bdf022e94cab3cd0&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;pf&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;s&#39;&gt;&amp;#39;Package Control.sublime-package&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;;&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;ipp&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;sublime&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;installed_packages_path&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;();&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;urllib&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;request&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;install_opener&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;urllib&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;request&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;build_opener&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;urllib&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;request&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;ProxyHandler&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;())&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;);&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;by&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;urllib&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;request&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;urlopen&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt; &lt;span class=&#39;s&#39;&gt;&amp;#39;http://sublime.wbond.net/&amp;#39;&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;+&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;pf&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;replace&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s&#39;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;s&#39;&gt;&amp;#39;%20&amp;#39;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;))&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;read&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;();&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;dh&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;=&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;hashlib&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;sha256&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;by&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;)&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;hexdigest&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;();&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;print&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;s&#39;&gt;&amp;#39;Error validating download (got &lt;/span&gt;&lt;span class=&#39;si&#39;&gt;%s&lt;/span&gt;&lt;span class=&#39;s&#39;&gt; instead of &lt;/span&gt;&lt;span class=&#39;si&#39;&gt;%s&lt;/span&gt;&lt;span class=&#39;s&#39;&gt;), please try manual install&amp;#39;&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;%&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;dh&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;h&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;))&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;if&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;dh&lt;/span&gt; &lt;span class=&#39;o&#39;&gt;!=&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;h&lt;/span&gt; &lt;span class=&#39;k&#39;&gt;else&lt;/span&gt; &lt;span class=&#39;nb&#39;&gt;open&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;os&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;path&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;join&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;ipp&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;n&#39;&gt;pf&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;),&lt;/span&gt; &lt;span class=&#39;s&#39;&gt;&amp;#39;wb&amp;#39;&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;)&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;.&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;write&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;(&lt;/span&gt;&lt;span class=&#39;n&#39;&gt;by&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;安装完成后我们就正式开始配置Sublime Text!&lt;/p&gt;

&lt;h3 id=&quot;plugins&quot;&gt;安装Plugins的万能方法&lt;/h3&gt;

&lt;p&gt;通过&lt;code&gt;ctrl+shift+p&lt;/code&gt;进入&lt;code&gt;Command Palette&lt;/code&gt;， 输入&lt;code&gt;Package Contorl: Install Package&lt;/code&gt;或简写为&lt;code&gt;ip&lt;/code&gt;， 回车执行，进入插件的搜索窗口，查找选择到需要的插件后，回车即可等待完成安装，招待状态在sublime最下面的状态栏内会有文字提示。&lt;/p&gt;

&lt;h3 id=&quot;_2&quot;&gt;一般配置&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;主题&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;sublime text可以通过插件安装很多主题，肯定有一款适合你。这里还是推荐在Sublime Text 2上一直使用的&lt;a href=&quot;http://buymeasoda.github.io/soda-theme/&quot;&gt;Theme - Soda Dark&lt;/a&gt;主题， 颜色模板使用&lt;a href=&quot;https://github.com/theymaybecoders/sublime-tomorrow-theme&quot;&gt;Color Scheme - Tomorrow Night&lt;/a&gt;，两者的搭配应该算的上经典，从notepad++转到Sublime Text 2时基本所有的介绍文档都是这么推荐的。 大家可以通过上面介绍的插件安装方法尝试一下。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;配置文件内容&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;javascript&#39;&gt;&lt;span class=&#39;c1&#39;&gt;// Colors&lt;/span&gt;
&lt;span class=&#39;s2&#39;&gt;&amp;quot;color_scheme&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;Packages/Tomorrow Color Schemes/Tomorrow-Night.tmTheme&amp;quot;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt;
&lt;span class=&#39;s2&#39;&gt;&amp;quot;theme&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;Soda Dark 3.sublime-theme&amp;quot;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt;
&lt;span class=&#39;c1&#39;&gt;// Font&lt;/span&gt;
&lt;span class=&#39;s2&#39;&gt;&amp;quot;font_size&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;mf&#39;&gt;12.0&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt;
&lt;span class=&#39;s2&#39;&gt;&amp;quot;font_options&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;[&lt;/span&gt;&lt;span class=&#39;s2&#39;&gt;&amp;quot;subpixel_antialias&amp;quot;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;no_bold&amp;quot;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;],&lt;/span&gt;
&lt;span class=&#39;s2&#39;&gt;&amp;quot;line_padding_bottom&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;mi&#39;&gt;1&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt;
&lt;span class=&#39;s2&#39;&gt;&amp;quot;line_padding_top&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;mi&#39;&gt;1&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt;
&lt;span class=&#39;c1&#39;&gt;// Editor view&lt;/span&gt;
&lt;span class=&#39;s2&#39;&gt;&amp;quot;draw_white_space&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;all&amp;quot;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt;
&lt;span class=&#39;s2&#39;&gt;&amp;quot;fold_buttons&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;kc&#39;&gt;false&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt;
&lt;span class=&#39;s2&#39;&gt;&amp;quot;highlight_line&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;kc&#39;&gt;true&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt;
&lt;span class=&#39;s2&#39;&gt;&amp;quot;auto_complete&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;kc&#39;&gt;false&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt;
&lt;span class=&#39;s2&#39;&gt;&amp;quot;show_minimap&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;kc&#39;&gt;false&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt;
&lt;span class=&#39;s2&#39;&gt;&amp;quot;show_full_path&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;kc&#39;&gt;true&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt;
&lt;span class=&#39;c1&#39;&gt;// Editor behavior&lt;/span&gt;
&lt;span class=&#39;s2&#39;&gt;&amp;quot;scroll_past_end&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;kc&#39;&gt;false&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt;
&lt;span class=&#39;s2&#39;&gt;&amp;quot;highlight_modified_tabs&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;kc&#39;&gt;true&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt;
&lt;span class=&#39;s2&#39;&gt;&amp;quot;find_selected_text&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;kc&#39;&gt;true&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt;
&lt;span class=&#39;c1&#39;&gt;// Whitespace - no tabs, trimming, end files with \n&lt;/span&gt;
&lt;span class=&#39;s2&#39;&gt;&amp;quot;tab_size&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;mi&#39;&gt;4&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt;
&lt;span class=&#39;s2&#39;&gt;&amp;quot;translate_tabs_to_spaces&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;kc&#39;&gt;true&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt;
&lt;span class=&#39;s2&#39;&gt;&amp;quot;trim_trailing_white_space_on_save&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;kc&#39;&gt;true&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt;
&lt;span class=&#39;s2&#39;&gt;&amp;quot;ensure_newline_at_eof_on_save&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;kc&#39;&gt;true&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt;
&lt;span class=&#39;c1&#39;&gt;// Sidebar&lt;/span&gt;
&lt;span class=&#39;s2&#39;&gt;&amp;quot;file_exclude_patterns&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;:&lt;/span&gt;
&lt;span class=&#39;p&#39;&gt;[&lt;/span&gt;
    &lt;span class=&#39;s2&#39;&gt;&amp;quot;.DS_Store&amp;quot;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt;
    &lt;span class=&#39;s2&#39;&gt;&amp;quot;*.pid&amp;quot;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt;
    &lt;span class=&#39;s2&#39;&gt;&amp;quot;*.pyc&amp;quot;&lt;/span&gt;
&lt;span class=&#39;p&#39;&gt;],&lt;/span&gt;
&lt;span class=&#39;s2&#39;&gt;&amp;quot;folder_exclude_patterns&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;:&lt;/span&gt;
&lt;span class=&#39;p&#39;&gt;[&lt;/span&gt;
    &lt;span class=&#39;s2&#39;&gt;&amp;quot;.git&amp;quot;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt;
    &lt;span class=&#39;s2&#39;&gt;&amp;quot;__pycache__&amp;quot;&lt;/span&gt;
&lt;span class=&#39;p&#39;&gt;],&lt;/span&gt;
&lt;span class=&#39;c1&#39;&gt;// Package Control&lt;/span&gt;
&lt;span class=&#39;s2&#39;&gt;&amp;quot;ignored_packages&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;:&lt;/span&gt;
&lt;span class=&#39;p&#39;&gt;[&lt;/span&gt;
    &lt;span class=&#39;s2&#39;&gt;&amp;quot;Vintage&amp;quot;&lt;/span&gt;
&lt;span class=&#39;p&#39;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;个人不喜欢自动切分换行功能，于是没有配置，所以后面把PEP8中的E501排除掉了&lt;/p&gt;

&lt;h3 id=&quot;_3&quot;&gt;开发环境插件&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://sublime.wbond.net/packages/Git&quot;&gt;Git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;版本库是软件开发中不可缺少的工具，该插件把Git常用命令加入了&lt;code&gt;Command Palette&lt;/code&gt;，让开发人员进行代码管理方便不少。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#39;https://dl.dropboxusercontent.com/u/57451074/github/sw897/images/sublime_git.png&#39; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://sublime.wbond.net/packages/GitGutter&quot;&gt;GitGutter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这个小插件是在修改后的文件行号前增加一些标识图片，方便与版本库对比，修改内容一目了然。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#39;https://dl.dropboxusercontent.com/u/57451074/github/sw897/images/sublime_gitgutter.png&#39; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://sublime.wbond.net/packages/Gist&quot;&gt;Gist&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;创建、管理gist的插件，Gist是GitHub提供的又一强力工具，用Git将用户常用的代码片段在线管理起来。安装此插件后，打开其User-Setting， 增加个人的GitHub访问Token后，即可通过快捷键或Console使用。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://sublime.wbond.net/packages/Anaconda&quot;&gt;Anaconda&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://sublime.wbond.net/packages/Anaconda&quot;&gt;Anaconda&lt;/a&gt;绝对是换到Sublime Text 3后最令我兴奋的插件，没有之一。在Sublime Text 2的时代，为配置一个好用的python开发环境， 我们需要分别安装All Autocomplete,SublimeREPL,Pylinter和PEP8等诸多插件。 Geek就是让一切变得更简单，该插件作者就为了简便，把这些功能集中起来了。 &lt;a href=&quot;https://sublime.wbond.net/packages/Anaconda&quot;&gt;Anaconda&lt;/a&gt;把PyFlakes, pep8 和 McCabe以插件的方式集成起来。安装&lt;a href=&quot;https://sublime.wbond.net/packages/Anaconda&quot;&gt;Anaconda&lt;/a&gt;后，通过配置即可完成一个良好的Python开发环境。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Anaconda is a python development suite that includes autocompletion, IDE features, linting with PyLint or PyFlakes + pep8, AutoPEP8 , Vagrant and more for Sublime Text 3.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;安装时可以通过Package Control安装，也可以使用Git追踪最新版本。&lt;a href=&quot;https://github.com/DamnWidget/anaconda&quot;&gt;GitHub地址&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;安装成功后在插件配置内打开&lt;a href=&quot;https://sublime.wbond.net/packages/Anaconda&quot;&gt;Anaconda&lt;/a&gt;的REAMME，可以参考进行个性配置。我这里做了如下的修改：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;增加对象的点操作符时的自动提示&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在&lt;code&gt;Packages/User&lt;/code&gt;目录下创建&lt;code&gt;Python.sublime-settings&lt;/code&gt;文件，增加如下内容&lt;/p&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;json&#39;&gt;&lt;span class=&#39;p&#39;&gt;{&lt;/span&gt;
    &lt;span class=&#39;nt&#39;&gt;&amp;quot;auto_complete_triggers&amp;quot;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;p&#39;&gt;[{&lt;/span&gt;&lt;span class=&#39;nt&#39;&gt;&amp;quot;selector&amp;quot;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;source.python - string - comment - constant.numeric&amp;quot;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;,&lt;/span&gt; &lt;span class=&#39;nt&#39;&gt;&amp;quot;characters&amp;quot;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;:&lt;/span&gt; &lt;span class=&#39;s2&#39;&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;}]&lt;/span&gt;
&lt;span class=&#39;p&#39;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;增加括号操作符后的参数自动完成&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在&lt;code&gt;Anaconda Setting&lt;/code&gt;中修改&lt;code&gt;complete_parameters&lt;/code&gt;参数的值为&lt;code&gt;true&lt;/code&gt;。 这里还有一个参数为&lt;code&gt;complete_all_parameters&lt;/code&gt;，设置其为&lt;code&gt;true&lt;/code&gt;后，则带默认值的参数也会自动完成。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;忽略&lt;code&gt;AutoFormat PEP8&lt;/code&gt;中E501的提示&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#39;highlight&#39;&gt;&lt;pre&gt;&lt;code class=&#39;javascript&#39;&gt;&lt;span class=&#39;s2&#39;&gt;&amp;quot;pep8_ignore&amp;quot;&lt;/span&gt;&lt;span class=&#39;o&#39;&gt;:&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;[&lt;/span&gt;&lt;span class=&#39;s2&#39;&gt;&amp;quot;E501&amp;quot;&lt;/span&gt;&lt;span class=&#39;p&#39;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;其他设置均使用默认值。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#39;https://dl.dropboxusercontent.com/u/57451074/github/sw897/images/sublime_anaconda.png&#39; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;_4&quot;&gt;结束&lt;/h3&gt;

&lt;p&gt;只需要这几个插件的安装与配置，就能使sublime text 3成为一个高效的python开发工具，接下来，感受 Sublime Text 3的快如疾风，风驰电掣吧！&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>动态链接库的搜索</title>
   <link href="http://sw897.github.io/2014/02/10/dynamic-link-library-searching"/>
   <updated>2014-02-10T00:00:00+08:00</updated>
   <id>http://sw897.github.io/2014/02/10/dynamic-link-library-searching</id>
   <content type="html">&lt;blockquote&gt;
&lt;p&gt;在OS X下安装一些开源软件，其动态链接库的依赖比较复杂，为了搞明白还是花了些功夫。 在这里把Windows,Linux,OS X这三种常用桌面的动态链接库的搜索方法总结一下。 有些问题还是没有搞太清楚，如有错误，请大家指教。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;windows&quot;&gt;Windows&lt;/h3&gt;

&lt;p&gt;最早开发程序的运行平台是windows的，这也是学习的起点。当时对动态链接库的认识就是DLL， 以为天下的动态链接库都是DLL。对动态库的喜爱也随着开发的深入，动态库的不同版本之间的冲突带入了恶梦。 怎样解决不同程序间使用的相同动态库的不同版本？了解了windows上动态库的搜索顺序，才有了大约的解决。 如果有对应的*.manifest文件，则按其文件内的绝对路径，否则按如下的顺序：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;应用程序所在的路径&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;当前目录&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Windows SYSTEM目录, GetSystemDirectory 函数检索此目录的路径。&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Windows目录, GetWindowsDirectory 函数检索此目录的路径。&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;PATH环境变量指定的路径&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;太久没有做windows开发了，认识也就停留在这个层面，MSDN上的 &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ms682586%28VS.85%29.aspx&quot;&gt;这篇文章&lt;/a&gt; 有更新更准确的介绍，这里留个链接，对有需要的朋友转入学习。&lt;/p&gt;

&lt;h3 id=&quot;linux&quot;&gt;Linux&lt;/h3&gt;

&lt;p&gt;过去一段时间用的最多的，也是比较熟悉的一个了。也就是从这个系统开始知道：DLL是动态链接库，但动态链接库不一定是DLL。 了解了linux上的动态库的搜索方法，才感叹在windows上处理方法的笨拙。 Linux系统中，动态链接的程序在运行时会自动链接ld.so这个库，ld.so负责找到其他的链接库。 搜索的依据有若干条，优先级最高，也是最推荐的是，在链接的时候加入 -rpath 参数指明所谓的 RUNPATH，这样可执行文件（或者依赖其他动态链接库的动态链接库）就能告诉 ld.so 到哪里去搜索对应的动态链接库了。 对于没有设定 RPATH 的可执行文件或者动态链接库，我们可以用 LD_LIBRARY_PATH 这个环境变量通知 ld.so， 这个方法的问题是，环境变量有时候设置了（如果 export 的话）会导致其他不需要设置的程序载入了不应该载入的动态链接库， 不 export 就得每次先设定再执行。通过 LD_PRELOAD 我们可以要求 ld.so 预先载入某些动态链接库， 这样就能 override 系统的动态链接库（比如使用特殊版本的 libc.so）。 还有就是在/etc/ld.so.conf中指定的路径。&lt;/p&gt;

&lt;p&gt;可以通过 man ld.so查看更多的帮助，通过 ldd查看一个文件依赖的动态链接库，通过 chrpath 修改文件的 RPATH。 值得注意的是 RPATH 本身也可以通过环境变量 RUNPATH 进行覆盖。&lt;/p&gt;

&lt;h3 id=&quot;os_x&quot;&gt;OS X&lt;/h3&gt;

&lt;p&gt;苹果的Mac OS X从10.8改为了OS X，也就是在这个时候我开始接触这个操作系统，并准备把工作转到这里进行。 虽然并未准备做OS X或iOS的原生开发，但只是安装一些开源软件也需要把动态链接库的搜索搞明白。 Mac从BSD走来，它与Linux的还是有区别的，特别是实行dmg的安装包，以及FrameWorks的引入，更显复杂了。&lt;/p&gt;

&lt;p&gt;它的 dynamic linker 是 dyld 这个程序，动态链接库的载入是依靠它完成解析之类的事情，它支持三个@executable_path, @loader_path, @rpath，具体可以参考&lt;a href=&quot;https://wincent.com/wiki/@executable_path,_@load_path_and_@rpath&quot;&gt;这篇&lt;/a&gt;, 以及&lt;a href=&quot;http://www.dribin.org/dave/blog/archives/2009/11/15/rpath/&quot;&gt;另一篇&lt;/a&gt;文章来学习。&lt;/p&gt;

&lt;p&gt;可以通过man dyld查看更多帮助，通过 otool -L查看一个文件依赖的动态链接库， 通过 install_name_tool -change 修改动态链接库的位置。 开发阶段往往直接链接到本地的dylib，此时对应的文件里面的路径一般是绝对路径，可以在发布的时候替换成相对路径。 编译动态链接库时，如果是 share 到任意程序的的动态库，通过 -install_name 插入绝对路径； 否则根据情况，比如是 app bundle 还是 plugin，设定为对应变量的相对位置; install_name 保证其他文件动态连接它时插入的名字是这个给定的字符串。 install name 可以用 install_name_tool -id 来修改。它依赖的动态链接库使用 -rpath 指定， 这样就算连接的动态链接库位置不是系统路径，也能自动找到。 比如我们写了一个 liba.dylib，为了很多其他程序方便用它，如果是类似 Linux 的做法， install name 可能是 /usr/local/lib/liba.dylib， 这样我的程序 app_a 直接写 -L/usr/local/lib -la 就能正确的找到在 /usr/local/lib 下的动态链接库。 如果 app_a 在写的时候 liba 也没写完，那么编译 liba 时写成 @rpath/liba.dylib 更合适， 因为 app_a 通过修改 -rpath 就可以测试正在写的 liba 或者是 deploy 到 /usr/local/lib 下的两个版本。 尽管仍然是 -L some-dir -la 链接 app_a 的，这里的 some-dir 可以是 /usr/local/lib 也可以是开发环境下的目录。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Web Mapping之CartoDB</title>
   <link href="http://sw897.github.io/2014/01/17/web-mapping-cartodb"/>
   <updated>2014-01-17T00:00:00+08:00</updated>
   <id>http://sw897.github.io/2014/01/17/web-mapping-cartodb</id>
   <content type="html">&lt;h3 id=&quot;&quot;&gt;介绍&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;We help people visualize and analyze geospatial data. From polygons to points. From hundreds to millions. No limits with CartoDB.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这是CartoDB主页上的介绍，帮助用户分析与可视化地理空间数据。可以应对成千上万的点或多边形数据。&lt;/p&gt;

&lt;p&gt;在注册过免费账号后，其当前提供的免费服务内容有：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;5个专题表&lt;/li&gt;

&lt;li&gt;5M存储空间&lt;/li&gt;

&lt;li&gt;每月1万次地图浏览&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img alt=&#39;cdb_freeserver&#39; src=&#39;https://dl.dropboxusercontent.com/u/57451074/github/sw897/images/cdb_freeserver.png&#39; /&gt;&lt;/p&gt;

&lt;p&gt;只能用少得可怜来形容。但这些足以来了解其灵活的功能会为您的工作带来的便利。如果有需求，可以转为付费用户。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;以下以CartoDB Blog上的一个展示为例，数据为美国邮局的shp文件，在以下地址下载&lt;a href=&quot;https://viz2.cartodb.com/api/v2/sql?q=SELECT%20*%20FROM%20us_po_offices&amp;format=SHP&quot;&gt;邮局SHP&lt;/a&gt;，包含位置与建立时间等属性字段。 准备好数据后，进入cartodb准备开始&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;_2&quot;&gt;试用&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;创建新表，并选择刚下载到本地的shp压缩包&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#39;https://dl.dropboxusercontent.com/u/57451074/github/sw897/images/cdb_newtable.png&#39; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;自动上传完成后会进入Table的浏览页面&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;选择创建Map View，更换底图(BaseMap)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#39;https://dl.dropboxusercontent.com/u/57451074/github/sw897/images/cdb_mapview.png&#39; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;通过Wizards来配置专题地图表现，这里模仿blog中的设置，选择Toque进行时间序列可视化，其它设置如图&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#39;https://dl.dropboxusercontent.com/u/57451074/github/sw897/images/cdb_config.png&#39; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;发布与分享，通过Publish功能，可以选择:URL,Embed,API三种发布方式，并可将url发布到facebook或twitter&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#39;https://dl.dropboxusercontent.com/u/57451074/github/sw897/images/cdb_publish.png&#39; /&gt;&lt;/p&gt;

&lt;p&gt;这里按embed的方式，引用交互地图&lt;/p&gt;
&lt;iframe frameborder=&#39;0&#39; height=&#39;520&#39; src=&#39;http://sw897.cartodb.com/viz/68695938-7f47-11e3-9aeb-9b0c6170d3d4/embed_map?title=true&amp;amp;description=true&amp;amp;search=false&amp;amp;shareable=true&amp;amp;cartodb_logo=true&amp;amp;layer_selector=false&amp;amp;legends=false&amp;amp;scrollwheel=true&amp;amp;sublayer_options=1&amp;amp;sql=&amp;amp;zoom=3&amp;amp;center_lat=36.77409249464195&amp;amp;center_lon=-79.453125&#39; width=&#39;100%&#39;&gt; &lt;/iframe&gt;
&lt;ul&gt;
&lt;li&gt;创建新的可视化方案，使用密度图方案，效果如下&lt;/li&gt;
&lt;/ul&gt;
&lt;iframe frameborder=&#39;0&#39; height=&#39;520&#39; src=&#39;http://sw897.cartodb.com/viz/bd2d7962-7f48-11e3-a612-db6222d3edab/embed_map?title=true&amp;amp;description=true&amp;amp;search=false&amp;amp;shareable=true&amp;amp;cartodb_logo=true&amp;amp;layer_selector=false&amp;amp;legends=false&amp;amp;scrollwheel=true&amp;amp;sublayer_options=1&amp;amp;sql=&amp;amp;zoom=3&amp;amp;center_lat=36.77409249464195&amp;amp;center_lon=-79.453125&#39; width=&#39;100%&#39;&gt; &lt;/iframe&gt;
&lt;blockquote&gt;
&lt;p&gt;由于免费账户只有1万的浏览次数，所以很容易挂掉，看不到地图不要惊奇&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
&lt;p&gt;注意：直接从cartodb的public中拷贝的embed script不能直接在jekyll中使用，需要在\&amp;lt;/iframe&amp;gt;结束标签前加入一个空格&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;_3&quot;&gt;总结&lt;/h3&gt;

&lt;p&gt;CartoDB的HOST基础设施并无太多介绍，但知道其使用Ubuntu10.04操作系统，支持CDN等。 其上的软件全部使用开源，除依赖其它开源软件，本身部分主要基于Ruby与JavaScript完成，在GitHub可以找到其项目，其特性如下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;上传、创建、编辑、可视化和导出空间数据的用户界面&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;利用 PostgreSQL 和 PostGIS 构建空间数据库&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;提供支持SQL查询的API，API使用GeoJSON和KML格式化结果，并基于HTTP提供&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;支持SQL的地图瓦片化，并利用 CartoCSS 支持样式配置&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;基于OAuth的认证&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 <entry>
   <title>Web地图制图应用介绍</title>
   <link href="http://sw897.github.io/2014/01/03/web-maping-introduce"/>
   <updated>2014-01-03T00:00:00+08:00</updated>
   <id>http://sw897.github.io/2014/01/03/web-maping-introduce</id>
   <content type="html">&lt;pre&gt;&lt;code&gt;本文介绍一下当前流行的在线地图制图应用。&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Web地图(WebMap)大家都不陌生，相信没有人没有用过GoogleMaps，它把GIS特别是WebGIS带入的主流的IT队伍中， 大大提高了这个小行业的技术进步速度。Web地图制图这个概念在Wikipedia中文中还没有定义页，但对照英语版有两个， &lt;a href=&quot;http://en.wikipedia.org/wiki/Web_cartography&quot;&gt;Web Cartography&lt;/a&gt;与&lt;a href=&quot;http://en.wikipedia.org/wiki/Web_mapping&quot;&gt;Web Mapping&lt;/a&gt;，前者重定向于后者。引用Wikipedia里的一句介绍:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;web mapping is more than just web cartography,it is both a service activity and consumer activity.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;也就是mapping不止于cartography。这里汇总的应用大体就就当属于cartography， 简单理解就是通过Web在线制作地图(Online Mapping)。 这种应用一般需要解决海量存储等基础设施，所以应当是基于云计算架构的。&lt;/p&gt;

&lt;p&gt;这些应用大体可以分这么两类：&lt;/p&gt;

&lt;h3 id=&quot;ugc&quot;&gt;UGC制图&lt;/h3&gt;

&lt;p&gt;UGC制图是一种交互式制图，用户参与更新底图、扩充POI等数据&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;* [OpenStreetMap][]
* [Google Map Maker][]
* [Nokia HERE Map Creator][]
* 当然还有移动终端应用[Waze][]，它的众包的概念，个人理解就是UGC的高阶模式&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;UGC制图公司或机构一般需要拥有海量基础数据，本身就是举足轻重的地图数据提供者，使用UGC的模式， 借助用户来改善地图数据，是“大家帮助大家”的思想。感兴趣的朋友可以加入到其中，做做贡献。&lt;/p&gt;

&lt;h3 id=&quot;online_mapping&quot;&gt;在线制图(Online Mapping)&lt;/h3&gt;

&lt;p&gt;在线制图应用，主要是个人专题地图制图，用户提供专题数据，使用应用平台完成可视化与交互， 这种应用属于云计算的一种形式，即应用即服务。用户使用它完成工作或作品，然后共享分发&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;* [Mapbox][]
* [CartoDB][]
* [MangoMap][]
* ArcGIS Online[地图故事][]
* SuperMap[地图汇][]&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这些应用是最近比较时兴的，它们一般技术先进并开放，把科研人员从基本编码中解放出来， 把非专业人员带入制图的世界，让专业人员更专注于专业的事情。总之，大体路线是提供Cloud Infrastructure和制图服务， 解决基础制图问题，包括底图，符号表达，专题可视化等等，剩下的，就是让用户专注专题数据，专注要表达的信息处理， 同时，可视化表达上，也有多种方案，可以让用户快速完成一个拥有绝佳交互体验与视觉冲击的地图。 但这些应用并不是免费的大餐，付费比较昂贵，对于一般用户，只能免费试用一下。&lt;/p&gt;

&lt;p&gt;当然，几家技术路线与背景各有不同，提供的功能也有差别。 国外的几家网站都使用HTML5技术，界面与交互更让人舒适，一种高大上感觉。其中&lt;a href=&quot;https://sw897.CartoDB.com/dashboard/&quot;&gt;CartoDB&lt;/a&gt;与&lt;a href=&quot;https://tiles.mapbox.com/sw897&quot;&gt;Mapbox&lt;/a&gt;后面会单独介绍一下。&lt;/p&gt;

&lt;p&gt;ArcGIS做为业内的领军，Online产品也是越来越好，而且商业化模式成功，&lt;a href=&quot;http://storymaps.arcgisonline.cn/home/index.html&quot;&gt;地图故事&lt;/a&gt;应当算是这几个中名气最大的了，本土化支撑， 特别是在高校中举办各种活动，培养新生的GISer们，大家都快感觉”ArcGIS是国产软件”不是错觉了。&lt;/p&gt;

&lt;p&gt;超图的&lt;a href=&quot;http://www.dituhui.com/&quot;&gt;地图汇&lt;/a&gt;也是其中很有特色的产品，结合建设国内大量在线地图应用的经验， 直接将属性与空间的连接功能(GeoCode,GeoReference)结合进去， 按世界，国家，省，市等几个等级组织，如果属性表里中有标准地名字段，可直接在图上形成专题图。 这种方法大大降低了用户门槛，更适合一般用户使用。另外，还提供了变形地图等少见的可视化方法，也是一个创新。 不过产品比较固化，没有给用户提供更多层次的接口，给人传统网站应用的感觉。 特别国内特色的，针对局域网的部署方案，典型的面向政府部门的应用模式。只能问一句：咱能有点互联网应用的节操么？&lt;/p&gt;

&lt;p&gt;这里主要介绍几个制图应用，至于如何选择，还要看大家的需求而定。 个人比较推荐的是&lt;a href=&quot;https://sw897.CartoDB.com/dashboard/&quot;&gt;CartoDB&lt;/a&gt;，本身功能强大，分发方便，又提供多种层次接口，可伸缩性强，适合有一定想法的用户。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>给jekyll bootstrap增加评论系统</title>
   <link href="http://sw897.github.io/2014/01/02/jekyll-bootstrap-add-comment"/>
   <updated>2014-01-02T00:00:00+08:00</updated>
   <id>http://sw897.github.io/2014/01/02/jekyll-bootstrap-add-comment</id>
   <content type="html">&lt;p&gt;jekyll bootstrap默认的评论系统是disqus,同时还可以配置使用livefyre,intensedebate,facebook， 这些虽然都不错，不过不符合我国国情，有必要换成国内的常用评论系统，用来支持国内的SNS平台， 比如新浪微博，豆瓣，人人等。国内评论系统也很多，常用的有&lt;a href=&quot;www.duoshuo.com&quot;&gt;多说&lt;/a&gt;和&lt;a href=&quot;http://www.uyan.cc/&quot;&gt;友言&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;虽然不懂Ruby，但jekyll bootstrap把结构做的相当完美，过程很简单，下面把配置&lt;a href=&quot;www.duoshuo.com&quot;&gt;多说&lt;/a&gt;的方法记录一下。 当然，开始之前需要先注册好&lt;a href=&quot;www.duoshuo.com&quot;&gt;多说&lt;/a&gt;的个人账号&lt;/p&gt;

&lt;p&gt;1 在_includes/JB/comments-providers文件夹下增加多说的配置文件duoshuo，内容如下&lt;/p&gt;
&lt;script src=&#39;https://gist.github.com/sw897/9130242.js&#39;&gt;&lt;![CDATA[]]&gt;&lt;/script&gt;
&lt;p&gt;内容已经使用jb的模板变量，不需要修改可以直接拷贝使用。&lt;/p&gt;

&lt;p&gt;2 在_includes/JB目录下，修改comments文件，在第4行插入duoshuo的判断段&lt;/p&gt;
&lt;script src=&#39;https://gist.github.com/sw897/27427499bef0d8bd504f.js&#39;&gt;&lt;![CDATA[]]&gt;&lt;/script&gt;
&lt;p&gt;3 最后修改_config.yml文件中comments部分即可&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;comments :
    provider : duoshuo
    duoshuo:
       short_name : 你的多说账号&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;经过以上3步即可配置完成，有兴趣的朋友可以用同样方法可以试试&lt;a href=&quot;http://www.uyan.cc/&quot;&gt;友言&lt;/a&gt;，除评论系统账号部分，全部能用， 其实可以向jekyll bootstrap提交一下代码，方便国人配置使用。&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>开始于2013的最后一天</title>
   <link href="http://sw897.github.io/2013/12/31/beginning-at-the-last-day-2013"/>
   <updated>2013-12-31T00:00:00+08:00</updated>
   <id>http://sw897.github.io/2013/12/31/beginning-at-the-last-day-2013</id>
   <content type="html">&lt;p&gt;终于开始自己的博客了。&lt;/p&gt;

&lt;p&gt;今天是一年的最后一天，是一个结束，而预示着一个新的开始。&lt;/p&gt;

&lt;p&gt;这个博客准备组织些什么文字，自己还没想好，应该不是过往的专业相关内容的总结， 总体构想是基于MacBook的适应使用过程，结合在读在看的一些东西，随便敲些文字。&lt;/p&gt;

&lt;p&gt;一个开头，也不知道写什么，就总结一下选择在GitHub开博的原因与过程吧。&lt;/p&gt;

&lt;h3 id=&quot;githubjekyll&quot;&gt;为什么选择使用GitHub+Jekyll？&lt;/h3&gt;

&lt;p&gt;这个也不需要太多解释，&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;GitHub带给开源太大的变化，一直一来关注的开源项目大多都转移到这里来了，被逼的&lt;/li&gt;

&lt;li&gt;Jekyll使用Markdown，本来计划使用IPython Notebook来记录学习的，就因为它使用Markdown，现在在这里分享更容易&lt;/li&gt;

&lt;li&gt;最后一条但很重要，&lt;a href=&quot;http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html&quot;&gt;阮一峰博客&lt;/a&gt; 中将写博分为三阶段，前两阶段只是实验与观望了，既然要开始，就选择高阶点的吧，也对得起老兵一枚。-_-&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;macos_107jekyll&quot;&gt;在MacOS 10.7上搭建基于Jekyll的个人博客&lt;/h3&gt;

&lt;p&gt;网上基于GitHub+Jekyll的博客搭建教程太多了，再写有些重复，我主要参考了 &lt;a href=&quot;http://www.chenzixin.com/program/2013/03/06/mac-jekyll-install-log/&quot;&gt;Mac OS X 安装 Jekyll 记录&lt;/a&gt; 这篇文章，操作过程略有不同，这里把结合个人电脑中使用情况来个简单介绍，如果是需要按步骤一步步安装请稳步上面那篇文章。&lt;/p&gt;

&lt;p&gt;会带来方便的软件：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://mac.github.com/&quot;&gt;GitHub for Mac&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;对于不熟悉Git命令的人来说，直接使用GitHub的图形界面，可以省去不少麻烦，在setting中绑定个人github账号后， 创建username.github.com的项目，拷贝jekyll bootstrap的代码到该目录，commit,sync都有图形化界面&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这个也不需过多说明，直接按Linux来打造Mac，让在Mac上开发与Linux无异&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.sublimetext.com/2&quot;&gt;Sublime Text&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这里不讨论Mac上到底用什么编辑器更好，只说明Sublime Text是个不错的选择，安装Markdown相关插件， 编辑Markdown相当犀利，高尚显示，直接Ctrl+B还可以直接浏览器预览 ^_^&lt;/p&gt;

&lt;p&gt;好了，下面开始重点&lt;/p&gt;

&lt;h3 id=&quot;jekyll&quot;&gt;搭建本地的Jekyll环境&lt;/h3&gt;

&lt;h4 id=&quot;macruby&quot;&gt;安装准备，更新Mac的Ruby&lt;/h4&gt;

&lt;p&gt;Mac 10.7自带的Ruby版本为1.8.6，使用其gem安装Jekyll后会有若干莫名其妙的错误， 其原因还是我们的Jekyll需要1.9.2+才行，还是自行安装新版本解决来的快些。 &lt;a href=&quot;http://www.chenzixin.com/program/2013/03/06/mac-jekyll-install-log/&quot;&gt;Mac OS X 安装 Jekyll 记录&lt;/a&gt; 文档教的方法是使用rvm，这里对于不懂Ruby的人来说，我也不想去装rvm，还是使用&lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;来搞定吧&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew install ruby&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;默认安装Ruby的最新版本2.1，教程说是最好是1.9.3版本，这里经实验2.1也是没有问题的。&lt;/p&gt;

&lt;h4 id=&quot;jekyll_2&quot;&gt;安装本地jekyll&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;$ sudo gem install jekyll&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这里要使用sudo，至于为什么，你可以试试不带sudo进行安装，看看提示就明白了。安装完成后会有一个提示， 这里没有拷贝下来，大体意思就是gem的工具没link到执行目录，可以通过&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ which jekyll&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;验证一下，发现查无其人(jekyll)。使用其提示的方法&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo gem pristine --all --only-executables
$ which jekyll
/usr/local/bin/jekyll&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样就可以，转到username.github.com目录，&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ jekyll serve&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;访问127.0.0.1:4000就可以查看jekyll bootstrap的默认blog了&lt;/p&gt;

&lt;h4 id=&quot;github&quot;&gt;同步到GitHub&lt;/h4&gt;

&lt;p&gt;首次在在本地折腾差不多后，使用GitHub for Mac Commit&amp;amp;Sync到GitHub上，就与大家共享文章了。&lt;/p&gt;

&lt;p&gt;新发文章或增加Page时，使用Jekyll Bootstrap提供的小工具很方便，专心写文章吧！&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;这个安装记录写的还真不清楚，按我这个来估计还是不行，还请参考以下文章&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html&quot;&gt;搭建一个免费的，无限流量的Blog—-github Pages和Jekyll入门&lt;/a&gt;&lt;/li&gt;

&lt;li&gt;&lt;a href=&quot;http://www.chenzixin.com/program/2013/03/06/mac-jekyll-install-log/&quot;&gt;Mac OS X 安装 Jekyll 记录&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content>
 </entry>
 
 
</feed>