<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>sw897的博客</title>
 <link href="http://sw897.github.io/" rel="self"/>
 <link href="http://sw897.github.io"/>
 <updated>2014-05-26T10:18:58+08:00</updated>
 <id>http://sw897.github.io</id>
 <author>
   <name>sw897</name>
   <email>sunwei.r@gmail.com</email>
 </author>

 
 <entry>
   <title>从Sublime Text 3转到Atom做开发</title>
   <link href="http://sw897.github.io/2014/05/26/use-atom-from-st3"/>
   <updated>2014-05-26T00:00:00+08:00</updated>
   <id>http://sw897.github.io/2014/05/26/use-atom-from-st3</id>
   <content type="html">
&lt;p&gt;之前一篇&lt;a href=&quot;/2014/02/13/sublime-text-3-for-python/&quot;&gt;“使用Sublime Text 3做Python开发”&lt;/a&gt;
的介绍文档还在鼓舞大家投到ST3的怀抱，我又迅速转投GitHub &lt;a href=&quot;https://atom.io/&quot;&gt;Atom&lt;/a&gt;，不禁一种愧意上心头，但我也是有苦衷的。&lt;/p&gt;

&lt;p&gt;ST3成为首发开发编辑器才没多久，它就开始出现一种莫名其妙的问题，花屏。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/st3messup.png&quot; alt=&quot;st3花屏&quot; /&gt;&lt;/p&gt;

&lt;p&gt;作为核心，出现这种掉链子的状况，实在无法容忍。
不清楚这个问题我的OS X上是个案，还是所有Mac上的通病。
在完成了OS X 10.9.2的某次更新就如此了。ST版本是3059，
由于经济并不宽裕，没有办法资助ST开发者70$，转到dev版测试是否还有这个问题。
而且3059已经半年没有更新了，我没有办法再等下去。&lt;/p&gt;

&lt;p&gt;想起了2月份公开测试的Atom。它出身于GitHub，绝对的“富二代”，看起来值得信赖。
看了一下官网介绍，在我身上少有的冒险精神活跃起来，我决定试用一下。&lt;/p&gt;

&lt;p&gt;启动Atom，熟悉的界面，和ST非常相似，虽然知道它与ST是完全不同的开发语言与构架，但第一眼，很难不把
两者往一块想。这也说明，Atom是要和ST正面PK了。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/atom.png&quot; alt=&quot;atom界面&quot; /&gt;&lt;/p&gt;

&lt;p&gt;看一下网站的介绍：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Taking the web native&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;基于Web技术的桌面应用程序。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Node.js integration&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;整合NodeJS，访问本地文件与启动子进程。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Modular design&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;模块化设计，基于最小化的内核集成了多个开源包&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Full-featured, right out of the box&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;功能全面。&lt;/p&gt;

&lt;p&gt;简单折腾一下，以上所言不虚，但还有如下不适感：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;启动有一点点慢，与ST比较&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;支持的语言不够多。大多Web开发中的客户端脚本支持完备，其它较少或不充分。这也与其新一代的Web编辑器定位相符&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;自动补全，函数提示等不够友好&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;特别的，针对Python的插件很少，并且不太好用，没有Anaconda这种集大成者插件。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;虽然以上种种的不爽，但其能正常使用，足够使用markdown写文档，以及编写一些简单脚本，这就够了。
另外，其快捷键等与ST一致，上手容易，就先这样吧，从这篇文档开始，就Atom了。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>[译]构建移动应用的4种方法: Native iOS应用</title>
   <link href="http://sw897.github.io/2014/05/19/four-ways-to-build-a-mobile-app-part1-native-ios"/>
   <updated>2014-05-19T00:00:00+08:00</updated>
   <id>http://sw897.github.io/2014/05/19/four-ways-to-build-a-mobile-app-part1-native-ios</id>
   <content type="html">
&lt;blockquote&gt;
  &lt;p&gt;“构建移动应用的4种方法”是&lt;a href=&quot;http://www.smashingmagazine.com/author/peter-traeg/?rel=author&quot;&gt;Peter Traeg&lt;/a&gt;博客上的系列文章，是很不错的移动开发的入门介绍与总结。近期帮朋友完成了一个小iOS应用，想起这篇文章，空闲时间翻译一下，也算回顾。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;PS:&lt;/p&gt;

  &lt;p&gt;1.非逐句翻译&lt;/p&gt;

  &lt;p&gt;2.例子我也逐步验证了一下，实现代码地址为我的GitHub&lt;/p&gt;

  &lt;p&gt;3.我太懒了，在实现过程中没有拷屏，文中图片全部来自原文。膜拜原作者。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;原文地址:&lt;a href=&quot;http://www.smashingmagazine.com/2013/11/22/four-ways-to-build-a-mobile-app-part1-native-ios/&quot;&gt;http://www.smashingmagazine.com/2013/11/22/four-ways-to-build-a-mobile-app-part1-native-ios/&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;开发移动应用有很多种方法，比较流行的有以下四种：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;native iOS&lt;/li&gt;
  &lt;li&gt;native Android&lt;/li&gt;
  &lt;li&gt;PhoneGap&lt;/li&gt;
  &lt;li&gt;Appcelerator Titanium&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;本主题分四篇文章来分别讲解以上四种方法，并通过分别实现相同一个简单的移动应用来大体介绍每种技术的实践。很少有开发人员可以有机会通过这么多种方法和工具来完成自己的移动开发，本主题正好可以扩展你的视野。&lt;/p&gt;

&lt;p&gt;希望有了这方面的了解后，在开发移动应用时你可以更好地选择合适的开发工具。本主题的第一篇文章，我将还大体介绍一下背景，并深入介绍iOS下的开发。&lt;/p&gt;

&lt;p&gt;为对比展示不同平台与开发工具在开发理念上的不同，我会使用每一种技术构建相同的一个简单应用。本专题不是让你选定其中某个特定的技术，而是让你了解在不同环境下开发时常用的方法与概念，并使用多种工具完成移动应用。&lt;/p&gt;

&lt;p&gt;FasTip是一个简单的计算小费的应用，这个例子足够简单，只使用了每个平台的标准UI控件。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/fastip-app-screens-500-opt.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;上图依次展示了采用native iOS,PhoneGap和native Android实现的该应用程序。Appcelerator Titanium使用的是平台的native控件，因此它分别看起来分别与native iOS和native Android一样。该应用有两个页面：主页面展现计算小费的内容，还有一个设置页面用来设置小费的百分比。为了保持简单，我使用了每个平台的默认风格。所有应用的源代码都可以在&lt;a href=&quot;https://github.com/sw897/mobile-apps-4-ways&quot;&gt;GitHub&lt;/a&gt;上获取。&lt;/p&gt;

&lt;h3 id=&quot;native-ios-&quot;&gt;Native iOS 开发&lt;/h3&gt;

&lt;p&gt;大多数的苹果应用商店里的应用是使用Objective-C语言开发的，开发者一般使用Xcode来完成开发。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/xcode-screen-500-opt.png&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;section&quot;&gt;获取开发工具&lt;/h4&gt;

&lt;p&gt;为构建一个iOS应用，必须使用OS X系统，其它的操作系统是不支持的。需要的开发工具有iOS 7 SDK和Xcode 5，这是免费的应用。然后使用iOS模拟器来运行编译好的应用，iOS模拟器是iOS SDK的一部分。如果想在一台设备上运行并在苹果应用商店里发布，就需要每年支付99美元。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/ToolsLanguages/Conceptual/Xcode_Overview/About_Xcode/about.html&quot;&gt;关于Xcode&lt;/a&gt;,” iOS开发库, Apple&lt;/li&gt;
  &lt;li&gt;“&lt;a href=&quot;https://developer.apple.com/devcenter/ios/index.action&quot;&gt;iOS开发者中心&lt;/a&gt;,” Apple&lt;/li&gt;
  &lt;li&gt;“&lt;a href=&quot;https://developer.apple.com/programs/ios/&quot;&gt;iOS 开发&lt;/a&gt;,” Apple&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-1&quot;&gt;创建工程&lt;/h4&gt;

&lt;p&gt;安装好Xcode后，在欢迎页面选择&lt;code&gt;Create a new Xcode project&lt;/code&gt;或通过菜单&lt;code&gt;File&amp;gt;New Project&lt;/code&gt;，创建一个新工程。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/xcode-new-project-500-opt.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;像例子这种简单的应用，一般选择创建&lt;code&gt;Single View&lt;/code&gt;程序。点击&lt;code&gt;Next&lt;/code&gt;后出现应用基本信息对话框:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/new-project-options-500-opt.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Class Prefix&lt;/code&gt;设置会给使用Xcode创建的所有类添加一个唯一前缀。因为Objective-C不像Java一样支持&lt;code&gt;namespace&lt;/code&gt;(命名空间)，添加唯一前缀可以避免命名冲突。&lt;code&gt;Devices&lt;/code&gt;设置用来严格要求应用的运行平台是iPhone或iPad，&lt;code&gt;universal&lt;/code&gt;选项可以让应用同时支持两者。&lt;/p&gt;

&lt;h4 id=&quot;navigationcontrollerviewcontroller&quot;&gt;导航控制器(NavigationController)与视图控制器(ViewController)&lt;/h4&gt;

&lt;p&gt;iOS应用的界面实现由视图控制器控制。示例有两个ViewController:一个主页面与一个设置页面。视图控制器包含了与屏幕控件交互的逻辑，并与导航控制器交互。导航控制器实现两个视图之间的转换，它在每个视图顶部提供了一个导航条。导航控制器管理了一个由视图控制器组成的视图栈，从而实现在不同屏幕里移动。&lt;/p&gt;

&lt;h4 id=&quot;storyboards-&quot;&gt;Storyboards: 可视化用户开发&lt;/h4&gt;

&lt;p&gt;从iOS 5开始, Xcode提供了storyboards, storyboards让开发者快速地定义一系列的视图，并分别指定每一页的内容。这是示例应用在storyboard中的展示。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/storyboard-overview-500-opt.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;左侧的对象表示导航控制器，它使用户能够从一屏移到另一屏上。右边的两个对象所代表的是组成示例的两个屏幕或视图控制器。从主屏到设置屏的联线箭头，表示屏与屏之间的过渡。选择起始的视图按键同时按住&lt;code&gt;Ctrl&lt;/code&gt;键，拖动到目标视图控制器上，可以创建一个新的联线。苹果文件有这个操作的更&lt;a href=&quot;https://developer.apple.com/library/ios/recipes/xcode_help-interface_builder/articles-storyboard/StoryboardSegue.html&quot;&gt;详细介绍&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/storyboard-properties-500-opt.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如上图所示，选择一个文本控件后，可以通过属性面板来调整控件的各种属性。当应用创建时，选择了“universal”选项，应用可以同时支持iPhone和iPad运行。从而，创建了两个版本的storyboard，运行时会根据设备选择_iPhone或_iPad的版本运行。这样可以两种设备上的不同布局，iPad可以使用更大的显示内容。视图控制器会自动加载合适的布局。谨记一点，如果storyboards对iPad和iPhone做了不同的一组表现控件，必须在视图控制器的代码里进行说明(account)。&lt;/p&gt;

&lt;p&gt;除了直接在屏幕的特定坐标系里布局对象，从iOS6版本也可以使用自动布局系统(Auto Layout System)。这使你可以在视图的控件间定义约束关系。可以通过storyboard编辑器来&lt;a href=&quot;https://developer.apple.com/library/ios/recipes/xcode_help-interface_builder/articles-autolayout/UnderstandingAutolayout.html&quot;&gt;创建和编辑约束&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/storyboard-constraints-500-opt.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;也可以使用程序来控制约束关系。自动布局机制有些复杂，第一次使用时可能会不太容易上手。在苹果的文档里有一个&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/UserExperience/Conceptual/AutolayoutPG/Introduction/Introduction.html&quot;&gt;关于自动布局的扩展指南&lt;/a&gt;。&lt;/p&gt;

&lt;h4 id=&quot;storyboards&quot;&gt;关联Storyboards与代码&lt;/h4&gt;

&lt;p&gt;为在代码中访问访问storyboard对象，必须指定两者间的关联。相比使用其它的开发环境，通过Xcode关联storyboard与代码很容易。开始关联前，必须先创建好一个视图控制器。这个过程如下：&lt;/p&gt;

&lt;p&gt;1.选择&lt;code&gt;File → New File&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;2.在弹出的对话框中选择&lt;code&gt;Objective-C class&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/file-new-template-opt.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;3.在接下来的对话框中设置类名并指定从UIViewController继承:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/file-new-options-500-opt.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;4.点击“Next”，提示创建的类文件存储位置.本例中选择工程根目录。&lt;/p&gt;

&lt;p&gt;5.点击“Next”，视图控制器文件创建完成。现在，关联新创建的视图控制器与storyboard中的视图.&lt;/p&gt;

&lt;p&gt;6.在storyboard中, 选中视图. 在&lt;code&gt;Identity Inspector&lt;/code&gt;面板, 选择待被关联的视图类:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/class-picker-opt.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;7.操作完成，视图控制器中的代码就被storyboard入口关联上了。&lt;/p&gt;

&lt;p&gt;在Objective-C代码里引用拖放到storyboard上控件时，需要先定义之间的关系。storyboard编辑器里的”assistant editor”视图可以方便完成这个操作。这是一个storyboard与代码的分隔面板。下面我们来看一下如何引用已经在storyboard上定义好的一个按键控件：&lt;/p&gt;

&lt;p&gt;1.首先，确认通过以上步骤完成了视图控制器类与storyboard中视图的关联。&lt;/p&gt;

&lt;p&gt;2.通过点击类似&lt;code&gt;assistant-editor-icon&lt;/code&gt;的图标来选择辅助编辑器。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/assistant-editor-icon-opt.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;3.当前会是一个分隔面板，storyboard在左边，视图控制器类在右边。&lt;/p&gt;

&lt;p&gt;4.按下&lt;code&gt;Ctrl&lt;/code&gt;键的同时，在storyboard里选择按键，拖动按键到代码interface区域。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/create-outlet-500-opt.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;5.这时会显示一个对话框，用来创建按钮在代码中的一个“outlet”。给按钮设置一个名字，然后点击”Connect”。这样就完成了在视图控制器中的按钮与代码的关联。&lt;/p&gt;

&lt;p&gt;6.现在来创建当点击按钮后触发的方法。选择按钮后，同样按住”Ctrl”拖动到代码的interface部分。&lt;/p&gt;

&lt;p&gt;7.在弹出的对话框中，在”Connetion”下拉菜单处选择”action”而不是”outlet”，如下输入方法名字:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/create-action-500-opt.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;“Event”使用默认的“Touch Up Inside”，然后点击”Connect”按按钮。&lt;/p&gt;

&lt;p&gt;8.现在，代码的interface部分有两个声明：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;objective-c&quot;&gt;&lt;span class=&quot;k&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FTSettingsViewController&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@property&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;weak&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nonatomic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;IBOutlet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UIButton&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;myButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;IBAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;tappedMyButton:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;sender&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;@end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;IBOutlet用来表示storyboard引用的所有对象类型，IBAction用来表示操作。注意，Xcode创建了一个空方法，用来输入代码，来响应用户在控制上的操作:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;objective-c&quot;&gt;&lt;span class=&quot;k&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;IBAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;tappedMyButton:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;sender&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;以上步骤需要一些时间来适应，并会越来越直观。经过一些练习，会越来越顺手的。也许&lt;a href=&quot;https://developer.apple.com/library/ios/documentation/ToolsLanguages/Conceptual/Xcode_Overview/Edit_User_Interfaces/edit_user_interface.html#//apple_ref/doc/uid/TP40010215-CH6-SW3&quot;&gt;“连接用户交互控制与代码”&lt;/a&gt;这个Xcode文档中的书签会给你带来帮助。&lt;/p&gt;

&lt;p&gt;正如我们将在后面介绍的，你也可以将对象添加到视图，并以编程方式操作它们的属性。事实上，即使是中等复杂的应用程序都通常在代码中进行大部分的控制。对于复杂的应用程序，一些开发人员避开了storyboard，并几乎完全使用代码替代。&lt;/p&gt;

&lt;h4 id=&quot;section-2&quot;&gt;开始编写代码&lt;/h4&gt;

&lt;p&gt;即使再基本的应用程序，都少不了写代码。到目前为止，我们在storyboard中完成了UI与视图控制器间的映射，但没有编写相关的计算代码，以及保存小费百分比的设置等。这些都是开发人员使用objective-c来完成的。&lt;/p&gt;

&lt;p&gt;当应用程序在运行时，其整个生命周期响应“应用程序委托”处理。在程序的生命周期中,由事件触发委托中的各种方法。这些事件有以下几种：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;程序启动&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;程序转到后台&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;程序转到前台&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;程序结束&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;接收到推送消息&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以上的事件在文件AppDelegate中处理。对于我们的示例程序，这些事件的默认处理足够了，不需要特殊的操作。文档中有应用程序的生命周期以及程序状态改变响应的介绍。接下来要注意的是视图控制器。正如应用委托，视图控制器也有其生命周期。视图控制器生命周期中包含以下事件触发时的响应方法：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;视图控制器加载&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;视图控制器准备在屏幕上显示或已显示&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;视图控制器准备在屏幕上隐藏或已隐藏&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;视图边框改变(如设备旋转)，视图重新加载&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;示例应用代码主要在FTViewController.m文件中。以下是初始化屏幕的相关代码：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;objective-c&quot;&gt;&lt;span class=&quot;k&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;viewWillAppear:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;BOOL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;animated&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// 保存默认的小费百分比&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;NSUserDefaults&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;defaults&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSUserDefaults&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;standardUserDefaults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tipPercentage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;defaults&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;floatForKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&amp;quot;tipPercentage&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tipPercentage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;_tipPercentage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tipPercentage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;_tipPercentage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;15.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tipAmountLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stringWithFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&amp;quot;%0.2f%%&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_tipPercentage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;示例应用中，我们要可以使用过去保存的小费百分值。为达到这个目的，可以使用NSUserDefaults，用来保存应用中的设置。要注意，这些值没有经过任何的加密，因此这不是保存类似密码这种敏感数据的好方式。iOS SDK提供KeyChain API来保存这些数据。以上的代码，我们尝试获取小费百分比的设置。如果没有设置，设置默认值为15%。当用户点击了”计算小费”的按钮，运行如下代码:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;objective-c&quot;&gt;&lt;span class=&quot;k&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;IBAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;didTapCalculate:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;sender&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;checkAmount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tipAmount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;totalAmount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;checkAmountTextField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;checkAmount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;checkAmountTextField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;floatValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;tipAmount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;checkAmount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_tipPercentage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;totalAmount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;checkAmount&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tipAmount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tipAmountLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stringWithFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&amp;quot;$%0.2f&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tipAmount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;totalAmountLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSString&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stringWithFormat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&amp;quot;$%0.2f&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;totalAmount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;checkAmountTextField&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resignFirstResponder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;读取用户在“金额”输入框内输入的值，然后计算小费。stringWithFormat方法用来格式化计算结果的表现。当用户点击“设置”按钮后，将会转到设置视图控制器。FTSettingsViewController文件用来处理这一屏幕的交互。按下此屏中的“完成”按钮将会运行以下代码：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;objective-c&quot;&gt;&lt;span class=&quot;k&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;IBAction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;didTapDone:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;sender&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kt&quot;&gt;float&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tipPercentage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tipPercentage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tipPercentageTextField&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;floatValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tipPercentage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;NSUserDefaults&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;defaults&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NSUserDefaults&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;standardUserDefaults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;defaults&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setFloat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tipPercentage&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;forKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&amp;quot;tipPercentage&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;defaults&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;synchronize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

        &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;navigationController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;popViewControllerAnimated&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;YES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

        &lt;span class=&quot;p&quot;&gt;[[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UIAlertView&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initWithTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&amp;quot;Invalid input&amp;quot;&lt;/span&gt;
                                    &lt;span class=&quot;nl&quot;&gt;message:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&amp;quot;Percentage must be a decimal value&amp;quot;&lt;/span&gt;
                                   &lt;span class=&quot;nl&quot;&gt;delegate:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;nil&lt;/span&gt;
                          &lt;span class=&quot;nl&quot;&gt;cancelButtonTitle:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&amp;quot;ok&amp;quot;&lt;/span&gt;
                          &lt;span class=&quot;nl&quot;&gt;otherButtonTitles:&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;从文本输入框中获取小费百分比值，验证输入值大于0。然后使用NSUserDefaults保存设置。调用synchronize方法保存值到存储中。保存后，使用导航控制器中的popViewControllerAnimated方法移除设置视图，并返回前一屏幕。如果用户没有填写有效的百分数，将继续保留在该屏幕，并弹出一个提示框。&lt;/p&gt;

&lt;p&gt;需要说明的是，以上通过视图控制器与storyboard完成的部分，可以通过编程实现。以下的代码片段实现了创建一个按钮并把它定位在屏幕上。这些对于我们的程序并不需要。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;objective-c&quot;&gt;&lt;span class=&quot;n&quot;&gt;CGRect&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buttonRect&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CGRectMake&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;75&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;150&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;UIButton&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;myButton&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UIButton&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buttonWithType&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UIButtonTypeRoundedRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;myButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;frame&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buttonRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;myButton&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setTitle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;@&amp;quot;Click me!&amp;quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;forState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;UIControlStateNormal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;addSubview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;myButton&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;一般来说，所有的添加在视图上的控件都扩展自UIView类。比如：按钮，标签，文本输入框等等都是UIView。UIView的实例在视图控制器中，视图控制器中的代码可以通过self.view获取。iOS SDK通过一个frame上的view来定位对象，也就是CGRect。CGRect包含对象的x,y坐标，以及对象的长，宽属性。以上的代码中，按钮通过一个frame(位置与尺寸)实例化并加到视图控制器中。&lt;/p&gt;

&lt;h4 id=&quot;ios&quot;&gt;运行与调试iOS应用程序&lt;/h4&gt;

&lt;p&gt;安装好Xcode与iOS SDK后，模拟iOS设备的iOS模拟器就安装好了，通过它可以在电脑上虚拟一个iOS设备。通过Xcode中的下拉菜单可以选择不同的设备配置。点击在左上角的“Run”按钮在指定的模拟器中运行应用程序。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/device-chooser-500-opt.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;通过上面的菜单，可以选择Retian或非Retian屏的iPhone或iPad设备。通过点击代码编辑器中行号的左边，进行debug。当程序运行到断点，程序会停止并在代码编辑器下面显示当前时多个变量的值。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/breakpoint-variables-500-opt.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;推送提示等功能不能在模拟器中测试。对于这些功能，必须在一个真实设备上测试，这就要求注册一个每年99美元的苹果开发者帐号。获取帐号后，可以通过usb线连接设备，Xcode会提示你输入你的证书并为你的设备提供一个“provision”。一量设备被识别，就显示在通过选择模拟器的下拉菜单中。&lt;/p&gt;

&lt;p&gt;在Xcode中，选择&lt;code&gt;Window-&amp;gt;Organizer&lt;/code&gt;菜单会显示一个管理工具，里面有Xcode中所有设备，以及测试日志等，还可以通过这个工具导出应用程序。&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;总结&lt;/h3&gt;

&lt;p&gt;到目前为止，我们已经了解了开发一个简单的iOS本地应用的基本内容。大多的应用比这要复杂，但以下基本的构成内容：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Xcode&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;开发环境&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Storyboards&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;用来设计与配置用户接口&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;View controllers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;storyboard中定义的视图的基本逻辑控制&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Navigation controllers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;不同视图间的切换控制&lt;/p&gt;

&lt;h4 id=&quot;section-4&quot;&gt;学习资源&lt;/h4&gt;

&lt;p&gt;学习iOS开发，可以参阅以下资源：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.amazon.com/iOS-Programming-Edition-Guides-ebook/dp/B007OWBAB0/ref=tmm_kin_title_0?ie=UTF8&amp;amp;qid=1365887748&amp;amp;sr=8-1&quot;&gt;iOS Programming: The Big Nerd Ranch Guide&lt;/a&gt;, Joe Conway and Aaron Hillegass&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这本书很妙，它包含了Objective-C与iOS的开发，并通过很好的例子来保持你的兴趣。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.amazon.com/Objective-C-Programming-Ranch-Guide-Guides/dp/0321706285/ref=pd_bxgy_b_text_y&quot;&gt;Objective-C Programming: The Big Nerd Ranch Guide&lt;/a&gt;, Aaron Hillegass&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这本书提供了Objective-C更详细的信息，可以让你超越iOS开发，深入语言的特性。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“&lt;a href=&quot;https://itunes.apple.com/us/course/coding-together-developing/id593208016&quot;&gt;Coding Together: Developing iOS 6 Apps for iPhone and iPad&lt;/a&gt;,” Stanford University&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;该系列的视频在iTunes U上。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“&lt;a href=&quot;https://developer.apple.com/wwdc/videos/&quot;&gt;WWDC 2013 Session Videos&lt;/a&gt;,” Apple&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;每届WDC(世界开发者大会)后，苹果发布的大会视频内容。适合所有的iOS开发者。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;“&lt;a href=&quot;https://developer.apple.com/library/ios/navigation/&quot;&gt;iOS 7 Design Resources&lt;/a&gt;,” Apple&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;该iOS文档很好，有很多关于iOS SDK的关键功能的指南。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.raywenderlich.com/&quot;&gt;Ray Wenderlich: Tutorials for iPhone / iOS Developers and Gamers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ray 分享了极多的教程系列, 并定期添加新的内容. 高级教程成本出售。&lt;/p&gt;

&lt;p&gt;我们就这样结束应用开发的第一部分。我希望它让你了解了iOS原生应用开发的基本概念。在本系列的下一篇文章将介绍如何使用Android原生开发工具来构建相同的应用程序。&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Jekyll换用kramdown后提示Missing dependency: kramdown真正原因</title>
   <link href="http://sw897.github.io/2014/05/03/the-real-reason-for-kramdown-missing"/>
   <updated>2014-05-03T00:00:00+08:00</updated>
   <id>http://sw897.github.io/2014/05/03/the-real-reason-for-kramdown-missing</id>
   <content type="html">
&lt;p&gt;使用Jekyll在GitHub上建立博客以来，一直感觉其简单易用，得心应手。具体安装配置也记录在第一篇文章&lt;a href=&quot;/2013/12/31/beginning-at-the-last-day-2013/&quot;&gt;“开始于2013的最后一天”&lt;/a&gt;。
问题出现在4月底，GitHub-Pages发邮件提示MarkDown的默认解析器由暮色的Maruku换成朝阳的Kramdown，建议在本地生成html时最好也做一下更新。&lt;/p&gt;

&lt;h4 id=&quot;section&quot;&gt;初次尝试&lt;/h4&gt;

&lt;p&gt;1.执行&lt;code&gt;sudo gem install kramdown&lt;/code&gt;安装kramdown&lt;/p&gt;

&lt;p&gt;2.修改在_config.yaml中的配置：&lt;code&gt;markdown: kramdown&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;3.执行&lt;code&gt;jekyll serve&lt;/code&gt;启动本地服务器&lt;/p&gt;

&lt;p&gt;提示“You are missing a library required for Markdown. Please run: $ [sudo] gem install kramdown”。重新安装kramdown还是如此。&lt;/p&gt;

&lt;h4 id=&quot;section-1&quot;&gt;二次尝试&lt;/h4&gt;

&lt;p&gt;出现以上问题后，没有深究原因，在GitHub上查了一下，找到了项目&lt;a href=&quot;https://github.com/github/pages-gem&quot;&gt;GitHub pages-gem&lt;/a&gt;，直接安装GitHub-Pages，执行：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$sudo gem install github-pages
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;偶然地，这样竟然没问题。洋洋得意，直接把方法更新在&lt;a href=&quot;/2013/12/31/beginning-at-the-last-day-2013/&quot;&gt;第一篇&lt;/a&gt;的记录里了。&lt;/p&gt;

&lt;h4 id=&quot;section-2&quot;&gt;最终方案&lt;/h4&gt;

&lt;p&gt;一段时间，在使用Brew更新过Ruby后，再次遇到一样的问题。这次要仔细一下了，不然更新一下，无休止出现这种问题，让人太恼火了。问了Google，stackoverflow，没有发现相同问题的。于是就怀疑是自己的环境问题。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;回顾环境&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;1.Mac OS X 10.9.2系统&lt;/p&gt;

&lt;p&gt;2.最新的brew环境&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;安装过程&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;执行以下命令安装ruby,github-pages&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$brew install ruby
$sudo gem install github-pages
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;查找原因&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;1.检查ruby,gem版本&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$which ruby
/usr/local/bin/ruby
$which gem
/usr/local/bin/ruby
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;结果是是brew安装的最新版本2.1.2。而不是OS X自带的老版本。&lt;/p&gt;

&lt;p&gt;2.检查jekyll版本&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$which jekyll
/usr/bin/jekyll
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;竟然是&lt;code&gt;/usr/bin&lt;/code&gt;下的，其加载的gems库是&lt;code&gt;/Library/Ruby/Gems/2.0.0/gems&lt;/code&gt;目录，不是brew安装的gem对应的库。再看一下brew安装gem对应的jekyll情况&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$gem which jekyll
/usr/local/Cellar/ruby/2.1.2/lib/ruby/gems/2.1.0/gems/jekyll-1.5.1/lib/jekyll.rb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;哈，原因找到了：安装jekyll后，没有将执行文件jekyll拷贝到可执行目录，一直在用的是/usr/bin/jekyll，也就是系统ruby下安装的。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;解决办法&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;link gem对应的jekyll到&lt;code&gt;/usr/local/bin&lt;/code&gt;下，使jekyll默认为该版本&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$sudo ln -s /usr/local/Cellar/ruby/2.1.2/bin/jekyll /usr/local/bin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;执行&lt;code&gt;jekyll serve&lt;/code&gt;，一直正常。收官！&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>在OS X上安装并使用PostgreSQL与PostGIS</title>
   <link href="http://sw897.github.io/2014/04/24/install-postgresql-postgis-on-os-x"/>
   <updated>2014-04-24T00:00:00+08:00</updated>
   <id>http://sw897.github.io/2014/04/24/install-postgresql-postgis-on-os-x</id>
   <content type="html">
&lt;p&gt;PostgreSQL是流行的先进开源关系型数据库，PostGIS是PostgreSQL空间信息扩展部分，支持空间索引与空间查询。越来越多的GIS应用使用两者的组合来完成后台空间数据的存储与获取，支撑前端应用系统。因其良好的性能与稳定表现，持续得到大家的追捧。避开当前流行的大数据与NoSQL，这种组合是完成一个稳健GIS系统的经典组合。&lt;/p&gt;

&lt;p&gt;两个软件虽然都是开源软件，但有很好的社区支持，产品化非常好。特别是针对Windows平台的支持，简单易用的安装包，自带的可视化工具PgAdmin3以及shp2pgsql_GUI，让不熟悉两者，甚至是不熟悉数据库的开发人员也能快速上手：使用shp2pgsql_GUI把Shape文件导入到PostGIS；使用PgAdmin3可视化运行SQL操作数据。在生产环境中，一般选择使用Linux平台，安装可以选择对应的发行包，也可以手工编译安装，&lt;code&gt;configure &amp;amp;&amp;amp; make &amp;amp;&amp;amp; make install&lt;/code&gt;一马平川。在OS X系统上，PostgreSQL的安装有多种方法，最简单的，还是类似Windows下的可视化安装包，但使用OS X的用户大多喜欢使用类似Linux的方法。所以，这里我们还是选用神器&lt;code&gt;brew&lt;/code&gt;的方法，并可深入了解OS X的用户管理与数据库初始化。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;一.安装&lt;/h3&gt;

&lt;p&gt;使用&lt;code&gt;brew&lt;/code&gt;安装，过程是相当的Nice。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;tcsh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew install postgresql   &lt;span class=&quot;c&quot;&gt;# 当前最新版本是9.3.4&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew install postgis      &lt;span class=&quot;c&quot;&gt;# 当前最新版本是2.1.2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;安装PostGIS前，最好安装Proj4,GEOS,GDAL,GeoIP等开源GIS库，以支持空间分析、IP定位等。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;tcsh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew install proj     &lt;span class=&quot;c&quot;&gt;# 当前最新版本是4.8.0&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew install geos     &lt;span class=&quot;c&quot;&gt;# 当前最新版本是3.4.2&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew install gdal     &lt;span class=&quot;c&quot;&gt;# 当前最新版本是1.10.1_1&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;brew install libgeoip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;section-1&quot;&gt;二.初始化&lt;/h3&gt;

&lt;h4 id=&quot;section-2&quot;&gt;1. 帐号配置&lt;/h4&gt;

&lt;p&gt;初始化数据库前需要指定一个用户帐号，使用安装PostgreSQL时默认创建的帐号&lt;code&gt;_postgres&lt;/code&gt;，可以通过&lt;code&gt;/etc/passwd&lt;/code&gt;文件查看帐号记录，也可以使用dscl工具进行查看。dscl工具是OS X上完成useradd,userdel,usermod等Linux平台上的工具功用的代替。以下使用dscl查看_postgres用户并修改其zsh登录。
具体选择哪种shell就按个人喜好了，具体系统中支持哪些可以查看&lt;code&gt;/etc/shells&lt;/code&gt;文件。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;tcsh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo dscl . list /Users | grep _postgres
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo dscl . read /Users/_postgres
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo dscl . change /Users/_postgres UserShell /usr/bin/false /bin/zsh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;section-3&quot;&gt;2. 初始化数据库&lt;/h4&gt;

&lt;p&gt;创建数据库目录，修改目录访问权限并初始化。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;tcsh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo mkdir /usr/local/var/postgres
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo chown _postgres:_postgres /usr/local/var/postgres/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo su - _postgres
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;initdb /usr/local/var/postgres
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;我的机子，系统为OS X 10.9，按上面执行，在运行initdb时会提示&lt;code&gt;Permission denied&lt;/code&gt;。问过google后，索性把&lt;code&gt;/usr/local/var&lt;/code&gt;的权限增加了可写，问题解决。&lt;/p&gt;

&lt;h3 id=&quot;section-4&quot;&gt;三.数据库管理控制&lt;/h3&gt;

&lt;h4 id=&quot;launchctl&quot;&gt;1. 使用launchctl管理&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;登录时自动启动&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;tcsh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mkdir -p ~/Library/LaunchAgents
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;cp /usr/local/Cellar/postgresql/9.3.4/homebrew.mxcl.postgresql.plist ~/Library/LaunchAgents/
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;启动&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;tcsh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;launchctl load -w ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;停止&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;tcsh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;launchctl unload  ~/Library/LaunchAgents/homebrew.mxcl.postgresql.plist
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;pgctl&quot;&gt;2. 使用pg_ctl管理&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;启动&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;tcsh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;停止&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;tcsh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pg_ctl -D /usr/local/var/postgres &lt;span class=&quot;nb&quot;&gt;stop&lt;/span&gt; -s -m fast
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;section-5&quot;&gt;3. 进程验证&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;$ ps aux | grep postgres&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-6&quot;&gt;四.创建空间数据库&lt;/h3&gt;

&lt;h4 id=&quot;v91postgresql&quot;&gt;1. V9.1及以上版本的PostgreSQL&lt;/h4&gt;

&lt;p&gt;使用PostGIS 2.0+创建空间数据库非常的Nice&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;tcsh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;createdb -E UTF8 --template&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;template0 postgis     &lt;span class=&quot;c&quot;&gt;#创建postgis数据库&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;psql -d postgis -c &lt;span class=&quot;s2&quot;&gt;&amp;quot;CREATE EXTENSION postgis;&amp;quot;&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;#增加空间扩展&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;psql -d postgis -c &lt;span class=&quot;s2&quot;&gt;&amp;quot;CREATE EXTENSION postgis_topology;&amp;quot;&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;#增加空间拓扑扩展&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;psql -d postgis -f legacy.sql                     &lt;span class=&quot;c&quot;&gt;#兼容旧版扩展&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;如果不需要兼容旧版本，或者不需要拓扑扩展等，也可以方便地移除&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;tcsh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;psql -d postgis -f uninstall_legacy.sql
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;psql -d postgis -f uninstall_topology.sql
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;psql -d postgis -f uninstall_postgis.sql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h4 id=&quot;v91postgresql-1&quot;&gt;2. V9.1以下版本PostgreSQL&lt;/h4&gt;

&lt;p&gt;老版本的Postgre创建空间数据库就稍有点麻烦，但本质上是一样的，也就是将空间扩展部分(数据表、函数、视图等)一个个地扩展到数据库中。为以后使用方便，一般是先创建一个空间数据库模板，这样，以后就以此为模板直接创建。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;创建空间数据库模板&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;具体扩展哪些sql根据需求自行操作&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;tcsh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ POSTGIS_SQL_PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/share/postgis
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;createdb -E UTF8 --template&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;template0 template_postgis    &lt;span class=&quot;c&quot;&gt;#创建数据库&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;createlang -d template_postgis plpgsql                    &lt;span class=&quot;c&quot;&gt;#支持pl/pgsql&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;psql -d postgres -c &lt;span class=&quot;s2&quot;&gt;&amp;quot;UPDATE pg_database SET datistemplate=&amp;#39;true&amp;#39; WHERE datname=&amp;#39;template_postgis&amp;#39;;&amp;quot;&lt;/span&gt;                                &lt;span class=&quot;c&quot;&gt;#设置为模板&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;psql -d template_postgis -f &lt;span class=&quot;nv&quot;&gt;$POSTGIS_SQL_PATH&lt;/span&gt;/postgis.sql
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;psql -d template_postgis -f &lt;span class=&quot;nv&quot;&gt;$POSTGIS_SQL_PATH&lt;/span&gt;/spatial_ref_sys.sql
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;psql -d template_postgis -c &lt;span class=&quot;s2&quot;&gt;&amp;quot;GRANT ALL ON geometry_columns TO PUBLIC;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;psql -d template_postgis -c &lt;span class=&quot;s2&quot;&gt;&amp;quot;GRANT ALL ON geography_columns TO PUBLIC;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;psql -d template_postgis -c &lt;span class=&quot;s2&quot;&gt;&amp;quot;GRANT ALL ON spatial_ref_sys TO PUBLIC;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;创建空间数据库及其用户&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;tcsh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;createuser -P -d -e postgis   &lt;span class=&quot;c&quot;&gt;#创建一个postgis普通用戶,用来登录空间数据库&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;createdb -T template_postgis -E UTF8 postgis &lt;span class=&quot;c&quot;&gt;# 创建一个空间数据库&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;section-7&quot;&gt;五.导入空间数据&lt;/h3&gt;

&lt;p&gt;创建好空间数据库后就是导入数据了，当前有两种方法：使用shp2pgsql工具将shapefile转为新的或追加到一个空间数据表内；直接sql语句将数据插入到空间数据表。&lt;/p&gt;

&lt;h4 id=&quot;shp2pgsqlshapefile&quot;&gt;1. 使用shp2pgsql导入shapefile&lt;/h4&gt;

&lt;p&gt;shp2pgsql是一个命令行工具，支持多个参数用于控制导入数据的方式。shp2pgsql-gui是其可视化版本，将大部分的参数进行了可视化。同时，还可以将shp2pgsql配置为pgAdmin的插件。&lt;/p&gt;

&lt;p&gt;将一个shp导入到数据库中的例子&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ shp2pgsql -c -D -s 4326 -W GB18030 -i -I poi.shp public.poi &amp;gt; poi.sql
$ psql -d postgis -f poi.sql
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用unix管道合并执行如下：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ shp2pgsql -c -D -s 4326 -W GB18030 -i -I poi.shp public.poi | psql -d postgis&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;sql&quot;&gt;2. 使用sql导入数据&lt;/h4&gt;

&lt;p&gt;创建好空间数据表后，可以直接使用sql语句向表中插入数据，一个示例。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;创建空间数据表&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_poi&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;gid&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;serial&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;geom&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;geometry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Point&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4326&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;character&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;varying&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;CONSTRAINT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_poi_pkey&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;插入数据&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_poi&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;geom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ST_GeomFromText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;POINT(120 40)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4326&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;林静小吃&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test_poi&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;geom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ST_GeomFromText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;POINT(121 41)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4326&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;石美泉加油站&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;COMMIT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;section-8&quot;&gt;六.结束&lt;/h3&gt;

&lt;p&gt;接下来的内容应当是从postgis中查询获取数据，还有很多使用PostGIS管理空间数据要写的，但由于本文只是PostGIS/PostgreSQL在OS X上的安装记录，
写到的或没写到的就这么多吧，具体可参考PostGIS用户手册。&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>解决在负载均衡中session共享问题</title>
   <link href="http://sw897.github.io/2014/04/11/session-in-a-load-balanced-share"/>
   <updated>2014-04-11T00:00:00+08:00</updated>
   <id>http://sw897.github.io/2014/04/11/session-in-a-load-balanced-share</id>
   <content type="html">
&lt;p&gt;今天同事偶尔问起来之前一个应用的架构，追问是如何解决session共享的问题的。
回忆了一下，好像真没有解决session共享，只是规避了共享的问题。
做法就是在nginx负载均衡的算法上，选择了ip_hash的方法。虽然只是控制相同session的请求转到同一台机器，但也算一种解决方法。&lt;/p&gt;

&lt;p&gt;对于之前的项目，使用的是Nginx+PHP+MySQL，
其中在多台机器上跑PHP-FPM的FastCGI。
在这种结构下，要解决session共享问题有很多方法。&lt;/p&gt;

&lt;h4 id=&quot;iphash&quot;&gt;使用ip_hash等分配方法&lt;/h4&gt;

&lt;p&gt;nginx中负载均衡配置时，可以选择ip_hash算法，这样同一个IP的请求会定向到同一台后端，这个IP下的某个客户端和某个后端建立起重色轻友的session，从而规避了多台后端之间的共享问题。ip_hash的配置如下：&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;nginx&quot;&gt;&lt;span class=&quot;k&quot;&gt;upstream&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;nginx.example.com&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;ip_hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;192.168.0.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;kn&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;192.168.0.2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;server&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;proxy_pass&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;http://nginx.example.com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;另外，Nginx负载均衡配置中，还可以选择使用upstream_hash这个第三方模块。这个模块多数情况下是用作url_hash的，但同样用来做session共享。&lt;/p&gt;

&lt;p&gt;如果不使用Nginx做负载均衡，而使用F5等硬件实现，同样可以配置根据session进行后端分配，解决session同享问题。&lt;/p&gt;

&lt;h4 id=&quot;mysqlsession&quot;&gt;使用MySQL存储session&lt;/h4&gt;

&lt;p&gt;PHP可以配置将session保存在数据库中，这种方法是把存放session的表和其他数据库表放在一起，如果mysql也做了集群了话，每个mysql节点都要有这张表，并且这张session表的数据表要实时同步。
但是用数据库来同步session，会加大数据库的IO，增加数据库的负担。而且数据库读写速度较慢，不利于session的实时同步。&lt;/p&gt;

&lt;h4 id=&quot;memcachesession&quot;&gt;使用memcache存储session&lt;/h4&gt;

&lt;p&gt;PHP配置文件中设置存储方式为memcache，这样php自己会建立一个session集群，将session数据存储在memcache中。&lt;/p&gt;

&lt;p&gt;用这种方式来同步session，不会加大数据库的负担，并且安全性比用cookie大大的提高，把session放到内存里面，比从文件中读取要快很多。但是memcache把内存分成很多种规格的存储块，有块就有大小，这种方式也就决定了，memcache不能完全利用内存，会产生内存碎片，如果存储块不足，还会产生内存溢出。&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>开源GIS与开源协议授权总结</title>
   <link href="http://sw897.github.io/2014/03/30/open-source-licence-introduce"/>
   <updated>2014-03-30T00:00:00+08:00</updated>
   <id>http://sw897.github.io/2014/03/30/open-source-licence-introduce</id>
   <content type="html">
&lt;h3 id=&quot;section&quot;&gt;介绍&lt;/h3&gt;

&lt;p&gt;开源软件近几年越来越流行，从SourceForge到GitHub,Bitbucket，存在着不计其数的开源项目。在国内，几家大公司也开始开放平台，拥抱开源，CSDN的开源平台也红红火火。GIS行业内，
有那么几个主要的基础库与软件也是得到了广泛的应用，特别是OSGeo组织下的GDAL,MapServer等等。在使用这些开源软件的时候，其协议授权，也就是licence，是我们要特别注意的。这些开源协议明确说明了使用者应该遵循的原则，从而确定了使用者使用开源软件的方式与方法，能否二次开发，进而商业发布，还是只能开源。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;开源授权&lt;/h3&gt;

&lt;p&gt;开源协议有很多，任何人写一个开源软件都可以自定义一个licence。常见的有这么6种：
GPL协议系列(v1,v2,v3…)，LGPL协议，BSD协议，Apache licence 2.0，MIT协议和Mozilla协议。
这几种协议规定都是很多页的英文，要仔细读完很需要时间与精力。好在介绍这些协议的文章有很多，最简单明白的是乌克兰程序员Paul Bagwell画的分析图，&lt;a href=&quot;http://www.ruanyifeng.com/&quot;&gt;阮一峰&lt;/a&gt;将这张图做了中文版，这里引用一下。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/licence-different.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;有了这张图，在享用开源软件的“免费大餐”时，我们就可以吃得明白放心。&lt;/p&gt;

&lt;h3 id=&quot;gis&quot;&gt;开源GIS&lt;/h3&gt;

&lt;p&gt;GIS行业有一个开源组织叫&lt;a href=&quot;http://www.osgeo.org/home&quot;&gt;OSGeo&lt;/a&gt;，
全称是The Open Source Geospatial Foundation，就像Apache基金会，
它组织管理了诸多的GIS行业开源软件。还有很多不在OSGeo组织下的开源软件，
如开源地图数据组织&lt;a href=&quot;http://www.openstreetmap.org/&quot;&gt;OpenStreetMap&lt;/a&gt;，
为支撑其数据同享与采集，也有大量的开源项目。还有一些独立的项目，如&lt;a href=&quot;http://mapnik.org/&quot;&gt;Mapnik&lt;/a&gt;，也有广泛的应用。&lt;/p&gt;

&lt;p&gt;这些软件功能强大，可靠性高，在项目中应用，可以提升开发效率，提高软件稳定性。
按对商业应用、二次开发的友好程度对开源协议进行排序，&lt;code&gt;MIT&amp;gt;BSD&amp;gt;Apache&amp;gt;LGPL&amp;gt;GPL&lt;/code&gt;。这里将这5个协议按应用灵活度分为以下三组，总结一下部分开源GIS软件或类库的应用场景。&lt;/p&gt;

&lt;h4 id=&quot;mitbsdapache&quot;&gt;MIT,BSD,Apache&lt;/h4&gt;

&lt;p&gt;这三个协议都对商业应用友好的许可，允许使用或在其代码上开发商业软件发布和销售。因为可以完全控制这些第三方的代码，在必要的时候可以修改或者二次开发。&lt;/p&gt;

&lt;p&gt;使用这类协议的开源GIS：Proj4, GDAL/OGR, MapServer, OpenLayers, Leaflet,ZOO-Project,PyCSW,pywps-4&lt;/p&gt;

&lt;h4 id=&quot;lgpl&quot;&gt;LGPL&lt;/h4&gt;

&lt;p&gt;LGPL是GPL的一个为主要为类库使用设计的开源协议。LGPL允许商业软件通过类库引用(link)方式使用LGPL类库而不需要开源商业软件的代码。这使得采用LGPL协议的开源代码可以被商业软件作为类库引用并发布和销售。但是如果修改LGPL协议的代码或者衍生，则所有修改的代码，涉及修改部分的额外代码和衍生的代码都必须采用LGPL协议。&lt;/p&gt;

&lt;p&gt;因此，LGPL协议的开源代码很适合作为第三方类库被商业软件引用，但不适合希望以LGPL协议代码为基础，通过修改和衍生的方式做二次开发的商业软件采用。&lt;/p&gt;

&lt;p&gt;使用LGPL的开源GIS：GEOS, FDO, GeoTools, Mapnik, MapGuide Open Source,OpenScales,OSGEarth&lt;/p&gt;

&lt;h4 id=&quot;gpl&quot;&gt;GPL&lt;/h4&gt;

&lt;p&gt;GPL的出发点是代码的开源/免费使用和引用/修改/衍生代码的开源/免费使用，但不允许修改后和衍生的代码做为闭源的商业软件发布和销售。由于GPL严格要求使用了GPL类库的软件产品必须使用GPL协议，对于使用GPL协议的开源代码，商业软件或者对代码有保密要求的部门就不适合集成/采用作为类库和二次开发的基础。所以在借鉴这类协议下的开源代码时需要注意了。&lt;/p&gt;

&lt;p&gt;使用GPL系列协议的开源GIS：PostGIS, Grass GIS, QGIS, GeoNetwork,PyWPS&lt;/p&gt;

&lt;h3 id=&quot;gis-1&quot;&gt;部分开源GIS与其协议授权对照表&lt;/h3&gt;

&lt;table class=&quot;gridtable&quot;&gt;
&lt;tr&gt;
    &lt;th&gt;开源软件&lt;/th&gt;&lt;th&gt;协议授权&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;GEOS&lt;/td&gt;&lt;td&gt;LGPL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Proj4&lt;/td&gt;&lt;td&gt;MIT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;GDAL/OGR&lt;/td&gt;&lt;td&gt;MIT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;FDO&lt;/td&gt;&lt;td&gt;LGPL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;GeoTools&lt;/td&gt;&lt;td&gt;LGPL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;PostGIS&lt;/td&gt;&lt;td&gt;GPLv2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;MapServer&lt;/td&gt;&lt;td&gt;MIT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Mapnik&lt;/td&gt;&lt;td&gt;LGPL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;GeoServer&lt;/td&gt;&lt;td&gt;GPLv2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;MapGuide Open Source&lt;/td&gt;&lt;td&gt;LGPL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;QGIS&lt;/td&gt;&lt;td&gt;GPLv2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;GRASS GIS&lt;/td&gt;&lt;td&gt;GPLv2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;OpenLayers&lt;/td&gt;&lt;td&gt;BSD&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Leaflet&lt;/td&gt;&lt;td&gt;自定义,类Apache&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;OpenScales&lt;/td&gt;&lt;td&gt;LGPL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;OsgEarth&lt;/td&gt;&lt;td&gt;LGPL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;ZOO-Project&lt;/td&gt;&lt;td&gt;MIT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;PyWPS&lt;/td&gt;&lt;td&gt;GPL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;pywps-4&lt;/td&gt;&lt;td&gt;MIT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;GeoNetwork&lt;/td&gt;&lt;td&gt;GPLv2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;PyCSW&lt;/td&gt;&lt;td&gt;MIT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Routino&lt;/td&gt;&lt;td&gt;Affero GPLv3&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

</content>
 </entry>
 
 <entry>
   <title>制作PostGIS的Dash文档</title>
   <link href="http://sw897.github.io/2014/03/16/make-postgis-docset"/>
   <updated>2014-03-16T00:00:00+08:00</updated>
   <id>http://sw897.github.io/2014/03/16/make-postgis-docset</id>
   <content type="html">
&lt;h3 id=&quot;postgis&quot;&gt;PostGIS介绍&lt;/h3&gt;

&lt;p&gt;PostGIS 是开源数据库 PostgreSQL 的空间数据支持扩展，PostGIS 实现了Open Geospatial Consortium所提供的Simple Features的SQL实现参考。对于GIS用户而言，PostGIS是一个重要的GIS基础软件，因为目前它是为数不多的开源空间数据库存储方案之一。在国内，由于其开源的特性，
近几年在多领域的GIS系统构建中得到了应用。&lt;/p&gt;

&lt;h3 id=&quot;dash&quot;&gt;制作Dash文档&lt;/h3&gt;

&lt;p&gt;对于GIS行业如此重要的基础软件文档，并未进入Dash官方的法眼，没有提供在线的文档更新源，这就要我们自己动手构建其Docset。下面请跟随我一步步开始&lt;code&gt;postgis.docset&lt;/code&gt;制作。&lt;/p&gt;

&lt;p&gt;1.创建Docset文件目录&lt;/p&gt;

&lt;p&gt;Docset是Dash支持的一种目录结构包，首先为我们的构建目标&lt;code&gt;postgis.docset&lt;/code&gt;创建其目录结构。
可以在终端中执行如下命令，也可以手工创建。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p postgis.docset/Contents/Resources/Documents/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;2.拷贝PostGIS文档&lt;/p&gt;

&lt;p&gt;将下载的最新的PostGIS文档拷贝到目录&lt;code&gt;postgis.docset/Contents/Resources/Documents/&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;3.创建Info.plist文件&lt;/p&gt;

&lt;p&gt;下载&lt;a href=&quot;http://kapeli.com/dash_resources/Info.plist&quot;&gt;Info.plist示例文件&lt;/a&gt;，拷贝到目录
&lt;code&gt;postgis.docset/Contents/&lt;/code&gt;下，并稍做修改，以下是本文的示例&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE plist PUBLIC &amp;quot;-//Apple//DTD PLIST 1.0//EN&amp;quot; &amp;quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;plist&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;version=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;1.0&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;dict&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;CFBundleIdentifier&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;postgis&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;CFBundleName&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;postgis&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;DocSetPlatformFamily&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;postgis&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;isDashDocset&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;true/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;DashDocSetFamily&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;dashtoc&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;key&amp;gt;&lt;/span&gt;dashIndexFilePath&lt;span class=&quot;nt&quot;&gt;&amp;lt;/key&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;string&amp;gt;&lt;/span&gt;index.html&lt;span class=&quot;nt&quot;&gt;&amp;lt;/string&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dict&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/plist&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;4.创建SQLite索引数据表&lt;/p&gt;

&lt;p&gt;创建SQLite索引数据库文件&lt;code&gt;postgis.docset/Contents/Resources/docSet.dsidx&lt;/code&gt;，并在数据库中创建searchIndex数据表与索引anchor。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;searchIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;INTEGER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;TEXT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;UNIQUE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INDEX&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;anchor&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;searchIndex&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;5.添加索引记录&lt;/p&gt;

&lt;p&gt;根据postgis文档，为Class,Function或Attribute等提供Dash内搜索的项目创建索引，也就是，
使用如下SQL语句向&lt;code&gt;searchIndex&lt;/code&gt;索引表插入一条记录。这个过程需要编写脚本执行。
后面会提供Python示例脚本。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;sql&quot;&gt;&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IGNORE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;searchIndex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;path&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;经过以上几步，&lt;code&gt;postgis.docset&lt;/code&gt;文档便制作完成。双击加入Dash中即可使用。
相信一步步执行的朋友卡在了第5步，下面就是其Python脚本。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Python脚本&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dash网站上有使用Python生成&lt;code&gt;postgredql.docset&lt;/code&gt;的脚本，使用&lt;code&gt;BeautifulSoup&lt;/code&gt;解析&lt;code&gt;bookindex.html&lt;/code&gt;生成。在生成&lt;code&gt;postgis.docset&lt;/code&gt;时，
由于主要查看函数的用法，介绍文档并不关注，结合postgis文档特点，直接遍历Documents目录，
根据文档列表生成Functions列表。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;lineno&quot;&gt; 1&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 2&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sqlite3&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 3&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt; 4&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sqlite3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;postgis.docset/Contents/Resources/docSet.dsidx&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 5&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cur&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 6&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt; 7&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 8&lt;/span&gt;     &lt;span class=&quot;n&quot;&gt;cur&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;DROP TABLE searchIndex;&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt; 9&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;10&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cur&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;12&lt;/span&gt;     &lt;span class=&quot;s&quot;&gt;&amp;#39;CREATE TABLE searchIndex(id INTEGER PRIMARY KEY, name TEXT, type TEXT, path TEXT);&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;13&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cur&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;CREATE UNIQUE INDEX anchor ON searchIndex (name, type, path);&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;15&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;docpath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;postgis.docset/Contents/Resources/Documents&amp;#39;&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;17&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dirs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;files&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;walk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;docpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;19&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;20&lt;/span&gt;         &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;splitext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;21&lt;/span&gt;         &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;.html&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;22&lt;/span&gt;             &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;RT_&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;23&lt;/span&gt;                 &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;24&lt;/span&gt;             &lt;span class=&quot;n&quot;&gt;cur&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;25&lt;/span&gt;                 &lt;span class=&quot;s&quot;&gt;&amp;#39;INSERT OR IGNORE INTO searchIndex(name, type, path) VALUES (?,?,?)&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;func&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;26&lt;/span&gt;             &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;name: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;, path: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;27&lt;/span&gt; 
&lt;span class=&quot;lineno&quot;&gt;28&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;commit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;lineno&quot;&gt;29&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;faq&quot;&gt;FAQ&lt;/h3&gt;
&lt;p&gt;以下是本文的可能的FAQ(常见问题)。&lt;/p&gt;

&lt;p&gt;问：我不是程序员，看不懂怎么办？&lt;/p&gt;

&lt;p&gt;答：那说明您根本不需要这样一个docset。&lt;/p&gt;

&lt;p&gt;问：我知道怎么做，但你这里像Dash手册里一样，啰嗦这么多还是要我一步步自己操作，有什么用？&lt;/p&gt;

&lt;p&gt;答：嗯~，为了表示诚意，我还是提供了制作的&lt;code&gt;postgis.docset&lt;/code&gt;文件下载的。
在我的github里，点一下&lt;a href=&quot;https://github.com/sw897/docset_postgis&quot;&gt;这里&lt;/a&gt;就可以了。不定时更新，有最新版本强迫症的朋友请走开。&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>使用Dash管理常用帮助文档</title>
   <link href="http://sw897.github.io/2014/03/05/dash-for-documents-manager"/>
   <updated>2014-03-05T00:00:00+08:00</updated>
   <id>http://sw897.github.io/2014/03/05/dash-for-documents-manager</id>
   <content type="html">
&lt;h3 id=&quot;dash&quot;&gt;Dash介绍&lt;/h3&gt;

&lt;p&gt;Dash是OS X上方便宜用的文档管理工具，提供了130+的API文档，
几乎包含了所有常用语言与流行开发框架，并保持着极高的更新速度。如果你是一名OS X上的程序员，对于开发，Dash绝对是神一样的利器。它可以直接在Apple Store上免费下载安装，
但喜欢恶作剧的开发者不会让你用得那么舒服，会不定时地出现等待页面，来打扰你的高效开发。
有时候，你会感觉到，通过Dash节省的Google的那几秒时间不够它等待的。这个时候，你就要在软件内
购买了，人民币128元，如果经济允许，还是可以购入的，因为它提供的文档及其管理功能，是无与伦比的。&lt;/p&gt;

&lt;h3 id=&quot;docset&quot;&gt;DocSet扩展&lt;/h3&gt;

&lt;p&gt;对于程序员来说，并不是提供了130+的文档就足够了，必然还有我们自己常用的，更小众的API。
Dash也想到了这点，提供了DIY的介绍。其&lt;a href=&quot;http://kapeli.com/docsets&quot;&gt;生成DocSets帮助文档&lt;/a&gt;中，有以下几种文档生成Docset的方法介绍：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://kapeli.com/docsets#objectivec&quot;&gt;AppleDoc(Objective-C Source Files)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://kapeli.com/docsets#python&quot;&gt;Python,Sphinx or PyDoctor&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://kapeli.com/docsets#javadoc&quot;&gt;Javadoc&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://kapeli.com/docsets#rdoc&quot;&gt;R-doc or Yard&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://kapeli.com/docsets#scaladoc&quot;&gt;Scaladoc&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://kapeli.com/docsets#doxygen&quot;&gt;Doxygen(Source Files:C,C++,C#,PHP,Objective-C,Java,Python)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://kapeli.com/docsets#dashDocset&quot;&gt;Any HTML Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;以上基本包含了所有可能自动生成的API文档。具体操作可以参考文档进行。还有更进阶的，提供与分享Feed，启用帮助页面内的JavaScript等等，可以慢慢试用。&lt;/p&gt;

&lt;h4 id=&quot;codedoc2dashcodesphinxpydoctorapi&quot;&gt;使用&lt;code&gt;doc2dash&lt;/code&gt;转换Sphinx或PyDoctor生成的API文档&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;&quot;&gt;doc2dash&lt;/a&gt;可以方便地把使用Sphinx与Pydoctor生成的HTML文档转换成Dash要求的docset。
过程非常简单，以NumPy为例。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;文档准备&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;下载&lt;a href=&quot;http://docs.scipy.org/doc/numpy/numpy-html-1.8.1.zip&quot;&gt;HTML格式的文档&lt;/a&gt;，解压后目录numpy-html。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;使用PIP安装doc2dash&lt;/p&gt;

    &lt;p&gt;pip install doc2dash&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;使用doc2dash生成docset&lt;/p&gt;

    &lt;p&gt;doc2dash numpy-html&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;codedoxygencodeapi&quot;&gt;使用&lt;code&gt;Doxygen&lt;/code&gt;直接转换API文档&lt;/h4&gt;

&lt;p&gt;Doxygen可以自动提取多种语言(包括但不限于 C, C++, C#, PHP, Objective-C, Java, Python )的注释生成HTML等多种格式的文档，其中就可以直接生成Dash需要docset。
以OGR这个GISer熟知的库为例，介绍一下步骤。
(别问我OGR属于GDAL，为什么要专门提出OGR库这个问题，手工生成过这两个库文档的人都懂)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;下载GDAL源代码准备，最好先编译一下&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;修改doxygen默认配置&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;生成OGR文档的配置文件为gdal/ogr/doxygen，用文本编译器打开，添加以下配置。
如果有的可以直接修改值。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;GENERATE_DOCSET   = YES
DISABLE_INDEX     = YES 
SEARCHENGINE      = NO
GENERATE_TREEVIEW = NO
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;终端转到gdal/ogr/目录，执行&lt;code&gt;doxygen&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;运行成功，会在当前目录生成html目录，html目录会包含一个以往生成文档时没有makefile文件。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;终端转到html目录，执行make&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;运行成功，即得到docset文件&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;总结&lt;/h3&gt;

&lt;p&gt;Dash是一款体形小巧、功能强大的文档管理工具，在线提供大量的API下载与更新，同时提供多种扩展方法，对提高开发效率有很大帮助。值得你拥有。&lt;/p&gt;

&lt;p&gt;另：一般性html文档制作docset的方法以后再写。&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>基于Jekyll Bootstrap的博客SEO优化</title>
   <link href="http://sw897.github.io/2014/02/20/jekyll-bootstrap-seo"/>
   <updated>2014-02-20T00:00:00+08:00</updated>
   <id>http://sw897.github.io/2014/02/20/jekyll-bootstrap-seo</id>
   <content type="html">
&lt;p&gt;写博客是为了共享与交流，但一个新博客，其搜索、关注度都很低。
这就要想想是为什么了？当然，最重要的一点，博客需要创造价值内容，没有内容就没有价值，
从而没有阅读，没有评论，没有交互。但对于一个新博客，如果不是靠&lt;code&gt;ctrl+c&lt;/code&gt;与&lt;code&gt;ctrl+v&lt;/code&gt;起家，由于时间短，内容是不会太多的。这个第一步怎样走出去？
外事问Google，搜索了一下SEO(搜索引擎优化)，看看大家有什么好的办法。这里记录一下本博针对SEO做的调整。&lt;/p&gt;

&lt;h3 id=&quot;section&quot;&gt;固定链接&lt;/h3&gt;

&lt;p&gt;修改_config.yml中的permalink，去掉category，防止整理文章时，
修改category后会造成404链接，修改后如下：
    permalink: /:year/:month/:day/:title&lt;/p&gt;

&lt;h3 id=&quot;postsurl&quot;&gt;posts的URL使用英文&lt;/h3&gt;

&lt;p&gt;jekyll bootstrap中使用&lt;code&gt;rake post title=&quot;xxx&quot;&lt;/code&gt;命令创建post时，创建的markdown文件中会自动把中文去掉，开始认为是对中文支持不好，每每都要rename一下。虽然当前搜索引擎都支持中文，但看到那一串的不能识别的编码后的字符，自己看google analytics时也会不爽，统一改为英文和分割线结构，好看又好记。如本篇&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;http://sw897.github.io/2014/02/20/jekyll-bootstrap-seo
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;metatitledescriptionkeywords&quot;&gt;完善meta信息，title,description,keywords一个都不能少&lt;/h3&gt;

&lt;p&gt;使用rake创建的post，会在头部自动增加title与description配置,写文章时一定要补全，这样使jekyll会自动添加目标html中。&lt;/p&gt;

&lt;p&gt;至于keywords，虽然都说由于大家的滥用，搜索引擎降低其作用，但了胜于无，加上无坏处。
打开&lt;strong&gt;Rakefile&lt;/strong&gt;,在69行增加如下代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;post.puts &#39;keywords: &quot;&quot;&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这样下次再使用rake命令创建post时会自动增加keywords声明。然后修改自己在用的模板主文件。我这里是&lt;code&gt;\_includes/themes/twitter/default.html&lt;/code&gt;，增加如下：&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/sw897/9131091.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;这样，会在生成html中增加keywords的meta信息。&lt;/p&gt;

&lt;p&gt;另外，title默认是文章标题，可以修改模板，增加博客主题内容，我的修改如下，这样在生成的所有页面中，title的内容为title之后加上&lt;strong&gt;sw897’s blog&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;title&amp;gt; page.title | sw897&#39;s blog&amp;lt;/title&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;sitemaptxtsitemapxml&quot;&gt;sitemap.txt转为sitemap.xml&lt;/h3&gt;

&lt;p&gt;jekyll bootstrap里自带有sitemap.txt，对于sitemap.txt与sitemap.xml的优劣，这里有篇&lt;a href=&quot;https://forums.digitalpoint.com/threads/xml-vs-txt-sitemap.114286/&quot;&gt;文章&lt;/a&gt;有讨论，
大体读了一下，大部分人的意思就是xml的比txt的强，既然如此，改一下又不麻烦，删除sitemap.txt，创建sitemap.xml，内容如下：&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/sw897/9131118.js&quot;&gt;&lt;/script&gt;

&lt;h3 id=&quot;robotstxt&quot;&gt;增加robots.txt&lt;/h3&gt;

&lt;p&gt;robots.txt是一种存放于网站根目录下的ASCII编码的文本文件，它通常告诉网络搜索引擎的漫游器（又称网络蜘蛛），此网站中的哪些内容是不应被搜索引擎的漫游器获取的，哪些是可以被（漫游器）获取的，以上摘自&lt;a href=&quot;&quot;&gt;robots.txt维基百科&lt;/a&gt;。在根目录下创建robots.txt，内容如下即可：&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/sw897/9131109.js&quot;&gt;&lt;/script&gt;

&lt;h3 id=&quot;section-1&quot;&gt;增加外链&lt;/h3&gt;

&lt;p&gt;在SEO中，外链能够极大的增加网站权重，让网站关键词有好的排名，这是因为搜索引擎是通过外链和锚文本来抓取网页内容的，增加外链能增加网站的曝光度，使网站权重得到提升。具体方法有很多，简单有效的两点：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;在文章内部多添加自己博客的链接&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在自己github,google+,facebook等SNS内增加网站链接&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-2&quot;&gt;持之以恒&lt;/h3&gt;

&lt;p&gt;最后，也是最重要的，坚持! 自勉！&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>使用Sublime Text 3做Python开发</title>
   <link href="http://sw897.github.io/2014/02/13/sublime-text-3-for-python"/>
   <updated>2014-02-13T00:00:00+08:00</updated>
   <id>http://sw897.github.io/2014/02/13/sublime-text-3-for-python</id>
   <content type="html">
&lt;h3 id=&quot;section&quot;&gt;引言&lt;/h3&gt;

&lt;p&gt;刚转到OS X平台时，寻找写Python,JavaScript,Markdown等文件的工具时，比较了许多工具，
最终选择了Sublime Text 2，主要原因是其跨平台，
想着以后再转到windows下开发时，不需要再重新适应其他工具。
Sublime Text 2学习曲线不像Vim那么陡峭，但想用得顺手，还是需要时间。在使用Sublime Text 2以后，还是有一段时间在怀念Notepad++的各种好，幻想notpad++明天会有OS X版本。
这段时间过后，越来越感觉到Sublime的强大，notepad++开始淡出了记忆。
Sublime Text 3的beta版本推出很长时间了，但其中文介绍文档非常少，多数介绍也只是停留在如何安装Package Control上，对开发相关插件介绍很少。正因为如此，许多人都在担心自己使用的plugins还不支持版本3，于是就一直不进行升级，我也是这种心态的其中一个。
这段时间有空，终于决定折腾一下。&lt;/p&gt;

&lt;p&gt;开始之前，看到&lt;a href=&quot;https://sublime.wbond.net&quot;&gt;Package Contorl网站&lt;/a&gt;上的一张统计图，给自己吃了个定心丸&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sublime_pc_stat.png&quot; alt=&quot;sublime text package control stat&quot; /&gt;&lt;/p&gt;

&lt;p&gt;可以看到，绝大部的插件已完成3版本的兼容，而且还有少量专为3定制的新插件。所以，大家可以放心转到3版本上来试用了。后面介绍的python开发环境支持插件就是从Sublime 3独有，具体是哪个这里暂不解密。&lt;/p&gt;

&lt;p&gt;当然，不排除有些奇葩插件还不支持3版本，但如果这样，我的建议就是把那个插件换掉吧，更新这么不及时，一定不是最合适的了。&lt;/p&gt;

&lt;h3 id=&quot;package-control&quot;&gt;安装Package Control&lt;/h3&gt;

&lt;p&gt;现在Sublime Text 3的安装方法和版本2一样，只是粘贴的代码内容稍有不同，在&lt;a href=&quot;https://sublime.wbond.net&quot;&gt;Package Contorl网站&lt;/a&gt;上有安装方法。使用快捷键&lt;code&gt;ctrl+\`&lt;/code&gt;或通过菜单选项&lt;code&gt;View &amp;gt; Show Console&lt;/code&gt;进入控制台Console，然后粘贴如下代码，回车运行。&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;urllib.request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;hashlib&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;7183a2d3e96f11eeadd761d777e62404e330c659d4bb41d3bdf022e94cab3cd0&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;Package Control.sublime-package&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ipp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sublime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;installed_packages_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;install_opener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build_opener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ProxyHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;urllib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;urlopen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;http://sublime.wbond.net/&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;%20&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dh&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hashlib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sha256&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hexdigest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;#39;Error validating download (got &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; instead of &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;), please try manual install&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dh&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ipp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;#39;wb&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;by&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;安装完成后我们就正式开始配置Sublime Text!&lt;/p&gt;

&lt;h3 id=&quot;plugins&quot;&gt;安装Plugins的万能方法&lt;/h3&gt;

&lt;p&gt;通过&lt;code&gt;ctrl+shift+p&lt;/code&gt;进入&lt;code&gt;Command Palette&lt;/code&gt;，
输入&lt;code&gt;Package Contorl: Install Package&lt;/code&gt;或简写为&lt;code&gt;ip&lt;/code&gt;，
回车执行，进入插件的搜索窗口，查找选择到需要的插件后，回车即可等待完成安装，招待状态在sublime最下面的状态栏内会有文字提示。&lt;/p&gt;

&lt;h3 id=&quot;section-1&quot;&gt;一般配置&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;主题&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;sublime text可以通过插件安装很多主题，肯定有一款适合你。这里还是推荐在Sublime Text 2上一直使用的&lt;a href=&quot;http://buymeasoda.github.io/soda-theme/&quot;&gt;Theme - Soda Dark&lt;/a&gt;主题，
颜色模板使用&lt;a href=&quot;https://github.com/theymaybecoders/sublime-tomorrow-theme&quot;&gt;Color Scheme - Tomorrow Night&lt;/a&gt;，两者的搭配应该算的上经典，从notepad++转到Sublime Text 2时基本所有的介绍文档都是这么推荐的。
大家可以通过上面介绍的插件安装方法尝试一下。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;配置文件内容&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Colors&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;color_scheme&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Packages/Tomorrow Color Schemes/Tomorrow-Night.tmTheme&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;theme&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Soda Dark 3.sublime-theme&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Font&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;font_size&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;12.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;font_options&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;subpixel_antialias&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;no_bold&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;line_padding_bottom&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;line_padding_top&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Editor view&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;draw_white_space&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;all&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;fold_buttons&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;highlight_line&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;auto_complete&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;show_minimap&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;show_full_path&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Editor behavior&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;scroll_past_end&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;highlight_modified_tabs&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;find_selected_text&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Whitespace - no tabs, trimming, end files with \n&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;tab_size&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;translate_tabs_to_spaces&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;trim_trailing_white_space_on_save&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;ensure_newline_at_eof_on_save&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Sidebar&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;file_exclude_patterns&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;.DS_Store&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;*.pid&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;*.pyc&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;folder_exclude_patterns&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;.git&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;__pycache__&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Package Control&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&amp;quot;ignored_packages&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&amp;quot;Vintage&amp;quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;个人不喜欢自动切分换行功能，于是没有配置，所以后面把PEP8中的E501排除掉了&lt;/p&gt;

&lt;h3 id=&quot;section-2&quot;&gt;开发环境插件&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://sublime.wbond.net/packages/Git&quot;&gt;Git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;版本库是软件开发中不可缺少的工具，该插件把Git常用命令加入了&lt;code&gt;Command Palette&lt;/code&gt;，让开发人员进行代码管理方便不少。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sublime_git.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://sublime.wbond.net/packages/GitGutter&quot;&gt;GitGutter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这个小插件是在修改后的文件行号前增加一些标识图片，方便与版本库对比，修改内容一目了然。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sublime_gitgutter.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://sublime.wbond.net/packages/Gist&quot;&gt;Gist&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;创建、管理gist的插件，Gist是GitHub提供的又一强力工具，用Git将用户常用的代码片段在线管理起来。安装此插件后，打开其User-Setting，
增加个人的GitHub访问Token后，即可通过快捷键或Console使用。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://sublime.wbond.net/packages/Anaconda&quot;&gt;Anaconda&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://sublime.wbond.net/packages/Anaconda&quot;&gt;Anaconda&lt;/a&gt;绝对是换到Sublime Text 3后最令我兴奋的插件，没有之一。在Sublime Text 2的时代，为配置一个好用的python开发环境，
我们需要分别安装All Autocomplete,SublimeREPL,Pylinter和PEP8等诸多插件。
Geek就是让一切变得更简单，该插件作者就为了简便，把这些功能集中起来了。
&lt;a href=&quot;https://sublime.wbond.net/packages/Anaconda&quot;&gt;Anaconda&lt;/a&gt;把PyFlakes, pep8 和 McCabe以插件的方式集成起来。安装&lt;a href=&quot;https://sublime.wbond.net/packages/Anaconda&quot;&gt;Anaconda&lt;/a&gt;后，通过配置即可完成一个良好的Python开发环境。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Anaconda is a python development suite that includes autocompletion, IDE features, linting with PyLint or PyFlakes + pep8, AutoPEP8 , Vagrant and more for Sublime Text 3.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;安装时可以通过Package Control安装，也可以使用Git追踪最新版本。&lt;a href=&quot;https://github.com/DamnWidget/anaconda&quot;&gt;GitHub地址&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;安装成功后在插件配置内打开&lt;a href=&quot;https://sublime.wbond.net/packages/Anaconda&quot;&gt;Anaconda&lt;/a&gt;的REAMME，可以参考进行个性配置。我这里做了如下的修改：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;增加对象的点操作符时的自动提示&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在&lt;code&gt;Packages/User&lt;/code&gt;目录下创建&lt;code&gt;Python.sublime-settings&lt;/code&gt;文件，增加如下内容&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;quot;auto_complete_triggers&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;quot;selector&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;source.python - string - comment - constant.numeric&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;&amp;quot;characters&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;增加括号操作符后的参数自动完成&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;在&lt;code&gt;Anaconda Setting&lt;/code&gt;中修改&lt;code&gt;complete_parameters&lt;/code&gt;参数的值为&lt;code&gt;true&lt;/code&gt;。
这里还有一个参数为&lt;code&gt;complete_all_parameters&lt;/code&gt;，设置其为&lt;code&gt;true&lt;/code&gt;后，则带默认值的参数也会自动完成。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;忽略&lt;code&gt;AutoFormat PEP8&lt;/code&gt;中E501的提示&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;pep8_ignore&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;E501&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;其他设置均使用默认值。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/sublime_anaconda.png&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;section-3&quot;&gt;结束&lt;/h3&gt;

&lt;p&gt;只需要这几个插件的安装与配置，就能使sublime text 3成为一个高效的python开发工具，接下来，感受 Sublime Text 3的快如疾风，风驰电掣吧！&lt;/p&gt;

&lt;h3 id=&quot;update2014-02-26&quot;&gt;Update:2014-02-26&lt;/h3&gt;

&lt;p&gt;使用OS X时间长了都忘记广大Windows用户存在GBK编码问题了。今天打开以前在Windows上写的
一些代码才发现中文注释都乱码了。解决办法很简单，安装插件&lt;a href=&quot;https://sublime.wbond.net/packages/ConvertToUTF8&quot;&gt;ConvertToUTF8&lt;/a&gt;即可，OS X或Linux还需要插件&lt;a href=&quot;https://sublime.wbond.net/packages/Codecs33&quot;&gt;Codecs33&lt;/a&gt;。
另外，在Sublime Text 2上的插件&lt;a href=&quot;https://sublime.wbond.net/packages/GBK%20Encoding%20Support&quot;&gt;GBK Encoding Support&lt;/a&gt;不支持3版本。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://sublime.wbond.net/packages/ConvertToUTF8&quot;&gt;ConvertToUTF8&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;支持GBK等多种编码的文件的编辑与保存。&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://sublime.wbond.net/packages/Codecs33&quot;&gt;Codecs33&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;CJK library files missing in the embedded Python of Sublime Text 3。&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>动态链接库的搜索</title>
   <link href="http://sw897.github.io/2014/02/10/dynamic-link-library-searching"/>
   <updated>2014-02-10T00:00:00+08:00</updated>
   <id>http://sw897.github.io/2014/02/10/dynamic-link-library-searching</id>
   <content type="html">
&lt;blockquote&gt;
  &lt;p&gt;在OS X下安装一些开源软件，其动态链接库的依赖比较复杂，为了搞明白还是花了些功夫。
在这里把Windows,Linux,OS X这三种常用桌面的动态链接库的搜索方法总结一下。
有些问题还是没有搞太清楚，如有错误，请大家指教。&lt;/p&gt;

&lt;/blockquote&gt;

&lt;h3 id=&quot;windows&quot;&gt;Windows&lt;/h3&gt;

&lt;p&gt;最早开发程序的运行平台是windows的，这也是学习的起点。当时对动态链接库的认识就是DLL，
以为天下的动态链接库都是DLL。对动态库的喜爱也随着开发的深入，动态库的不同版本之间的冲突带入了恶梦。
怎样解决不同程序间使用的相同动态库的不同版本？了解了windows上动态库的搜索顺序，才有了大约的解决。
如果有对应的*.manifest文件，则按其文件内的绝对路径，否则按如下的顺序：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;应用程序所在的路径&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;当前目录&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Windows SYSTEM目录, GetSystemDirectory 函数检索此目录的路径。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Windows目录, GetWindowsDirectory 函数检索此目录的路径。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;PATH环境变量指定的路径&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;太久没有做windows开发了，认识也就停留在这个层面，MSDN上的
&lt;a href=&quot;http://msdn.microsoft.com/en-us/library/ms682586%28VS.85%29.aspx&quot;&gt;这篇文章&lt;/a&gt;
有更新更准确的介绍，这里留个链接，对有需要的朋友转入学习。&lt;/p&gt;

&lt;h3 id=&quot;linux&quot;&gt;Linux&lt;/h3&gt;

&lt;p&gt;过去一段时间用的最多的，也是比较熟悉的一个了。也就是从这个系统开始知道：DLL是动态链接库，但动态链接库不一定是DLL。
了解了linux上的动态库的搜索方法，才感叹在windows上处理方法的笨拙。
Linux系统中，动态链接的程序在运行时会自动链接ld.so这个库，ld.so负责找到其他的链接库。
搜索的依据有若干条，优先级最高，也是最推荐的是，在链接的时候加入 -rpath 参数指明所谓的 RUNPATH，这样可执行文件（或者依赖其他动态链接库的动态链接库）就能告诉 ld.so 到哪里去搜索对应的动态链接库了。
对于没有设定 RPATH 的可执行文件或者动态链接库，我们可以用 LD_LIBRARY_PATH 这个环境变量通知 ld.so，
这个方法的问题是，环境变量有时候设置了（如果 export 的话）会导致其他不需要设置的程序载入了不应该载入的动态链接库，
不 export 就得每次先设定再执行。通过 LD_PRELOAD 我们可以要求 ld.so 预先载入某些动态链接库，
这样就能 override 系统的动态链接库（比如使用特殊版本的 libc.so）。
还有就是在&lt;code&gt;/etc/ld.so.conf&lt;/code&gt;中指定的路径。&lt;/p&gt;

&lt;p&gt;可以通过&lt;code&gt;man ld.so&lt;/code&gt;查看更多的帮助，通过&lt;code&gt;ldd&lt;/code&gt;查看一个文件依赖的动态链接库通过 &lt;code&gt;chrpath&lt;/code&gt;修改文件的 RPATH。
值得注意的是 RPATH 本身也可以通过环境变量 RUNPATH 进行覆盖。&lt;/p&gt;

&lt;h3 id=&quot;os-x&quot;&gt;OS X&lt;/h3&gt;

&lt;p&gt;苹果的Mac OS X从10.8改为了OS X，也就是在这个时候我开始接触这个操作系统，并准备把工作转到这里进行。
虽然并未准备做OS X或iOS的原生开发，但只是安装一些开源软件也需要把动态链接库的搜索搞明白。
Mac从BSD走来，它与Linux的还是有区别的，特别是实行dmg的安装包，以及FrameWorks的引入，更显复杂了。&lt;/p&gt;

&lt;p&gt;它的 dynamic linker 是 dyld 这个程序，动态链接库的载入是依靠它完成解析之类的事情，它支持三个@executable_path,
@loader_path, @rpath，具体可以参考&lt;a href=&quot;https://wincent.com/wiki/@executable_path,_@load_path_and_@rpath&quot;&gt;这篇&lt;/a&gt;,
以及&lt;a href=&quot;http://www.dribin.org/dave/blog/archives/2009/11/15/rpath/&quot;&gt;另一篇&lt;/a&gt;文章来学习。&lt;/p&gt;

&lt;p&gt;可以通过&lt;code&gt;man dyld&lt;/code&gt;查看更多帮助，通过&lt;code&gt;otool -L&lt;/code&gt;查看一个文件依赖的动态链接库，
通过&lt;code&gt;install_name_tool -change&lt;/code&gt;修改动态链接库的位置。
开发阶段往往直接链接到本地的dylib，此时对应的文件里面的路径一般是绝对路径，可以在发布的时候替换成相对路径。
编译动态链接库时，如果是 share 到任意程序的的动态库，通过&lt;code&gt;-install_name&lt;/code&gt;插入绝对路径；
否则根据情况，比如是 app bundle 还是 plugin，设定为对应变量的相对位置;
install_name 保证其他文件动态连接它时插入的名字是这个给定的字符串。
install name 可以用&lt;code&gt;install_name_tool -id&lt;/code&gt;来修改。它依赖的动态链接库使用&lt;code&gt;-rpath&lt;/code&gt;指定，
这样就算连接的动态链接库位置不是系统路径，也能自动找到。
比如我们写了一个 liba.dylib，为了很多其他程序方便用它，如果是类似 Linux 的做法，
install name 可能是&lt;code&gt;/usr/local/lib/liba.dylib&lt;/code&gt;，
这样我的程序 app_a 直接写&lt;code&gt;-L/usr/local/lib -la&lt;/code&gt;就能正确的找到在&lt;code&gt;/usr/local/lib&lt;/code&gt;下的动态链接库。
如果 app_a 在写的时候 liba 也没写完，那么编译 liba 时写成&lt;code&gt;@rpath/liba.dylib&lt;/code&gt;更合适，
因为 app_a 通过修改 -rpath 就可以测试正在写的 liba 或者是 deploy 到&lt;code&gt;/usr/local/lib&lt;/code&gt;下的两个版本。
尽管仍然是&lt;code&gt;-L some-dir -la&lt;/code&gt;链接 app_a 的，这里的 some-dir 可以是&lt;code&gt;/usr/local/lib&lt;/code&gt;也可以是开发环境下的目录。&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Web Mapping之CartoDB</title>
   <link href="http://sw897.github.io/2014/01/17/web-mapping-cartodb"/>
   <updated>2014-01-17T00:00:00+08:00</updated>
   <id>http://sw897.github.io/2014/01/17/web-mapping-cartodb</id>
   <content type="html">
&lt;h3 id=&quot;section&quot;&gt;介绍&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;We help people visualize and analyze geospatial data.
From polygons to points. From hundreds to millions. No limits with CartoDB.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;这是CartoDB主页上的介绍，帮助用户分析与可视化地理空间数据。可以应对成千上万的点或多边形数据。&lt;/p&gt;

&lt;p&gt;在注册过免费账号后，其当前提供的免费服务内容有：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;5个专题表&lt;/li&gt;
  &lt;li&gt;5M存储空间&lt;/li&gt;
  &lt;li&gt;每月1万次地图浏览&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cdb_freeserver.png&quot; alt=&quot;cdb_freeserver&quot; /&gt;&lt;/p&gt;

&lt;p&gt;只能用少得可怜来形容。但这些足以来了解其灵活的功能会为您的工作带来的便利。如果有需求，可以转为付费用户。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;以下以CartoDB Blog上的一个展示为例，数据为美国邮局的shp文件，在以下地址下载&lt;a href=&quot;https://viz2.cartodb.com/api/v2/sql?q=SELECT%20*%20FROM%20us_po_offices&amp;amp;format=SHP&quot;&gt;邮局SHP&lt;/a&gt;，包含位置与建立时间等属性字段。
准备好数据后，进入cartodb准备开始&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;section-1&quot;&gt;试用&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;创建新表，并选择刚下载到本地的shp压缩包&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cdb_newtable.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;自动上传完成后会进入Table的浏览页面&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;选择创建Map View，更换底图(BaseMap)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cdb_mapview.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;通过Wizards来配置专题地图表现，这里模仿blog中的设置，选择Toque进行时间序列可视化，其它设置如图&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cdb_config.png&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;发布与分享，通过Publish功能，可以选择:URL,Embed,API三种发布方式，并可将url发布到facebook或twitter&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/cdb_publish.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这里按embed的方式，引用交互地图&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;520&quot; frameborder=&quot;0&quot; src=&quot;http://sw897.cartodb.com/viz/68695938-7f47-11e3-9aeb-9b0c6170d3d4/embed_map?title=true&amp;amp;description=true&amp;amp;search=false&amp;amp;shareable=true&amp;amp;cartodb_logo=true&amp;amp;layer_selector=false&amp;amp;legends=false&amp;amp;scrollwheel=true&amp;amp;sublayer_options=1&amp;amp;sql=&amp;amp;zoom=3&amp;amp;center_lat=36.77409249464195&amp;amp;center_lon=-79.453125&quot;&gt; &lt;/iframe&gt;

&lt;ul&gt;
  &lt;li&gt;创建新的可视化方案，使用密度图方案，效果如下&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;520&quot; frameborder=&quot;0&quot; src=&quot;http://sw897.cartodb.com/viz/bd2d7962-7f48-11e3-a612-db6222d3edab/embed_map?title=true&amp;amp;description=true&amp;amp;search=false&amp;amp;shareable=true&amp;amp;cartodb_logo=true&amp;amp;layer_selector=false&amp;amp;legends=false&amp;amp;scrollwheel=true&amp;amp;sublayer_options=1&amp;amp;sql=&amp;amp;zoom=3&amp;amp;center_lat=36.77409249464195&amp;amp;center_lon=-79.453125&quot;&gt; &lt;/iframe&gt;

&lt;blockquote&gt;
  &lt;p&gt;由于免费账户只有1万的浏览次数，所以很容易挂掉，看不到地图不要惊奇&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;注意：直接从cartodb的public中拷贝的embed script不能直接在jekyll中使用，需要在&amp;lt;/iframe&amp;gt;结束标签前加入一个空格&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;section-2&quot;&gt;总结&lt;/h3&gt;

&lt;p&gt;CartoDB的HOST基础设施并无太多介绍，但知道其使用Ubuntu10.04操作系统，支持CDN等。
其上的软件全部使用开源，除依赖其它开源软件，本身部分主要基于Ruby与JavaScript完成，在GitHub可以找到其项目，其特性如下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;上传、创建、编辑、可视化和导出空间数据的用户界面&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;利用 PostgreSQL 和 PostGIS 构建空间数据库&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;提供支持SQL查询的API，API使用GeoJSON和KML格式化结果，并基于HTTP提供&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;支持SQL的地图瓦片化，并利用 CartoCSS 支持样式配置&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;基于OAuth的认证&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>Web地图制图应用介绍</title>
   <link href="http://sw897.github.io/2014/01/03/web-maping-introduce"/>
   <updated>2014-01-03T00:00:00+08:00</updated>
   <id>http://sw897.github.io/2014/01/03/web-maping-introduce</id>
   <content type="html">
&lt;pre&gt;&lt;code&gt;本文介绍一下当前流行的在线地图制图应用。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Web地图(WebMap)大家都不陌生，相信没有人没有用过GoogleMaps，它把GIS特别是WebGIS带入的主流的IT队伍中，
大大提高了这个小行业的技术进步速度。Web地图制图这个概念在Wikipedia中文中还没有定义页，但对照英语版有两个，
&lt;a href=&quot;http://en.wikipedia.org/wiki/Web_cartography&quot;&gt;Web Cartography&lt;/a&gt;与&lt;a href=&quot;http://en.wikipedia.org/wiki/Web_mapping&quot;&gt;Web Mapping&lt;/a&gt;，前者重定向于后者。引用Wikipedia里的一句介绍:
&amp;gt; web mapping is more than just web cartography,it is both a service activity and consumer activity.&lt;/p&gt;

&lt;p&gt;也就是mapping不止于cartography。这里汇总的应用大体就就当属于cartography，
简单理解就是通过Web在线制作地图(Online Mapping)。
这种应用一般需要解决海量存储等基础设施，所以应当是基于云计算架构的。&lt;/p&gt;

&lt;p&gt;这些应用大体可以分这么两类：&lt;/p&gt;

&lt;h3 id=&quot;ugc&quot;&gt;UGC制图&lt;/h3&gt;

&lt;p&gt;UGC制图是一种交互式制图，用户参与更新底图、扩充POI等数据&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.openstreetmap.org&quot;&gt;OpenStreetMap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.google.com/mapmaker&quot;&gt;Google Map Maker&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://heremaps.cn/mapcreator&quot;&gt;Nokia HERE Map Creator&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;当然还有移动终端应用&lt;a href=&quot;https://www.waze.com/editor/&quot;&gt;Waze&lt;/a&gt;，它的众包的概念，个人理解就是UGC的高阶模式&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;UGC制图公司或机构一般需要拥有海量基础数据，本身就是举足轻重的地图数据提供者，使用UGC的模式，
借助用户来改善地图数据，是“大家帮助大家”的思想。感兴趣的朋友可以加入到其中，做做贡献。&lt;/p&gt;

&lt;h3 id=&quot;online-mapping&quot;&gt;在线制图(Online Mapping)&lt;/h3&gt;

&lt;p&gt;在线制图应用，主要是个人专题地图制图，用户提供专题数据，使用应用平台完成可视化与交互，
这种应用属于云计算的一种形式，即应用即服务。用户使用它完成工作或作品，然后共享分发&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://tiles.mapbox.com/sw897&quot;&gt;Mapbox&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://sw897.CartoDB.com/dashboard/&quot;&gt;CartoDB&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mangomap.com/maps&quot;&gt;MangoMap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ArcGIS Online&lt;a href=&quot;http://storymaps.arcgisonline.cn/home/index.html&quot;&gt;地图故事&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;SuperMap&lt;a href=&quot;http://www.dituhui.com/&quot;&gt;地图汇&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这些应用是最近比较时兴的，它们一般技术先进并开放，把科研人员从基本编码中解放出来，
把非专业人员带入制图的世界，让专业人员更专注于专业的事情。总之，大体路线是提供Cloud Infrastructure和制图服务，
解决基础制图问题，包括底图，符号表达，专题可视化等等，剩下的，就是让用户专注专题数据，专注要表达的信息处理，
同时，可视化表达上，也有多种方案，可以让用户快速完成一个拥有绝佳交互体验与视觉冲击的地图。
但这些应用并不是免费的大餐，付费比较昂贵，对于一般用户，只能免费试用一下。&lt;/p&gt;

&lt;p&gt;当然，几家技术路线与背景各有不同，提供的功能也有差别。
国外的几家网站都使用HTML5技术，界面与交互更让人舒适，一种高大上感觉。其中&lt;a href=&quot;https://sw897.CartoDB.com/dashboard/&quot;&gt;CartoDB&lt;/a&gt;与&lt;a href=&quot;https://tiles.mapbox.com/sw897&quot;&gt;Mapbox&lt;/a&gt;后面会单独介绍一下。&lt;/p&gt;

&lt;p&gt;ArcGIS做为业内的领军，Online产品也是越来越好，而且商业化模式成功，&lt;a href=&quot;http://storymaps.arcgisonline.cn/home/index.html&quot;&gt;地图故事&lt;/a&gt;应当算是这几个中名气最大的了，本土化支撑，
特别是在高校中举办各种活动，培养新生的GISer们，大家都快感觉”ArcGIS是国产软件”不是错觉了。&lt;/p&gt;

&lt;p&gt;超图的&lt;a href=&quot;http://www.dituhui.com/&quot;&gt;地图汇&lt;/a&gt;也是其中很有特色的产品，结合建设国内大量在线地图应用的经验，
直接将属性与空间的连接功能(GeoCode,GeoReference)结合进去，
按世界，国家，省，市等几个等级组织，如果属性表里中有标准地名字段，可直接在图上形成专题图。
这种方法大大降低了用户门槛，更适合一般用户使用。另外，还提供了变形地图等少见的可视化方法，也是一个创新。
不过产品比较固化，没有给用户提供更多层次的接口，给人传统网站应用的感觉。
特别国内特色的，针对局域网的部署方案，典型的面向政府部门的应用模式。只能问一句：咱能有点互联网应用的节操么？&lt;/p&gt;

&lt;p&gt;这里主要介绍几个制图应用，至于如何选择，还要看大家的需求而定。
个人比较推荐的是&lt;a href=&quot;https://sw897.CartoDB.com/dashboard/&quot;&gt;CartoDB&lt;/a&gt;，本身功能强大，分发方便，又提供多种层次接口，可伸缩性强，适合有一定想法的用户。&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>给jekyll bootstrap增加评论系统</title>
   <link href="http://sw897.github.io/2014/01/02/jekyll-bootstrap-add-comment"/>
   <updated>2014-01-02T00:00:00+08:00</updated>
   <id>http://sw897.github.io/2014/01/02/jekyll-bootstrap-add-comment</id>
   <content type="html">
&lt;p&gt;jekyll bootstrap默认的评论系统是disqus,同时还可以配置使用livefyre,intensedebate,facebook，
这些虽然都不错，不过不符合我国国情，有必要换成国内的常用评论系统，用来支持国内的SNS平台，
比如新浪微博，豆瓣，人人等。国内评论系统也很多，常用的有&lt;a href=&quot;www.duoshuo.com&quot;&gt;多说&lt;/a&gt;和&lt;a href=&quot;http://www.uyan.cc/&quot;&gt;友言&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;虽然不懂Ruby，但jekyll bootstrap把结构做的相当完美，过程很简单，下面把配置&lt;a href=&quot;www.duoshuo.com&quot;&gt;多说&lt;/a&gt;的方法记录一下。
当然，开始之前需要先注册好&lt;a href=&quot;www.duoshuo.com&quot;&gt;多说&lt;/a&gt;的个人账号&lt;/p&gt;

&lt;p&gt;1 在&lt;code&gt;\_includes/JB/comments-providers&lt;/code&gt;文件夹下增加多说的配置文件duoshuo，内容如下&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/sw897/9130242.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;内容已经使用jb的模板变量，不需要修改可以直接拷贝使用。&lt;/p&gt;

&lt;p&gt;2 在&lt;code&gt;\_includes/JB&lt;/code&gt;目录下，修改comments文件，在第4行插入duoshuo的判断段&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/sw897/9131080.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;3 最后修改&lt;code&gt;\_config.yml&lt;/code&gt;文件中comments部分即可&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;comments :
    provider : duoshuo
    duoshuo:
       short_name : 你的多说账号
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;经过以上3步即可配置完成，有兴趣的朋友可以用同样方法可以试试&lt;a href=&quot;http://www.uyan.cc/&quot;&gt;友言&lt;/a&gt;，除评论系统账号部分，全部能用，
其实可以向jekyll bootstrap提交一下代码，方便国人配置使用。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Updated:2014-02-21&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;之前一直苦恼于怎样在markdown中直接贴Jekyll的相关代码，因为&lt;strong&gt;{}&lt;/strong&gt;、&lt;strong&gt;%&lt;/strong&gt;等关键字包含内容会自动解释，后来结合Gist终于解决：把代码创建gist后，再嵌入回来。虽然会影响速度，但完美解决生成HTML时代码解释运行的问题。&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>开始于2013的最后一天</title>
   <link href="http://sw897.github.io/2013/12/31/beginning-at-the-last-day-2013"/>
   <updated>2013-12-31T00:00:00+08:00</updated>
   <id>http://sw897.github.io/2013/12/31/beginning-at-the-last-day-2013</id>
   <content type="html">
&lt;p&gt;终于开始自己的博客了。&lt;/p&gt;

&lt;p&gt;今天是一年的最后一天，是一个结束，而预示着一个新的开始。&lt;/p&gt;

&lt;p&gt;这个博客准备组织些什么文字，自己还没想好，应该不是过往的专业相关内容的总结，
总体构想是基于MacBook的适应使用过程，结合在读在看的一些东西，随便敲些文字。&lt;/p&gt;

&lt;p&gt;一个开头，也不知道写什么，就总结一下选择在GitHub开博的原因与过程吧。&lt;/p&gt;

&lt;h3 id=&quot;githubjekyll&quot;&gt;为什么选择使用GitHub+Jekyll？&lt;/h3&gt;

&lt;p&gt;这个也不需要太多解释，&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;GitHub带给开源太大的变化，一直一来关注的开源项目大多都转移到这里来了，被逼的&lt;/li&gt;
  &lt;li&gt;Jekyll使用Markdown，本来计划使用IPython Notebook来记录学习的，就因为它使用Markdown，现在在这里分享更容易&lt;/li&gt;
  &lt;li&gt;最后一条但很重要，&lt;a href=&quot;http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html&quot;&gt;阮一峰博客&lt;/a&gt;
中将写博分为三阶段，前两阶段只是实验与观望了，既然要开始，就选择高阶点的吧，也对得起老兵一枚。-_-&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;macos-107jekyll&quot;&gt;在MacOS 10.7上搭建基于Jekyll的个人博客&lt;/h3&gt;

&lt;p&gt;网上基于GitHub+Jekyll的博客搭建教程太多了，再写有些重复，我主要参考了
&lt;a href=&quot;http://www.chenzixin.com/program/2013/03/06/mac-jekyll-install-log/&quot;&gt;Mac OS X 安装 Jekyll 记录&lt;/a&gt;
这篇文章，操作过程略有不同，这里把结合个人电脑中使用情况来个简单介绍，如果是需要按步骤一步步安装请稳步上面那篇文章。&lt;/p&gt;

&lt;p&gt;会带来方便的软件：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://mac.github.com/&quot;&gt;GitHub for Mac&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;对于不熟悉Git命令的人来说，直接使用GitHub的图形界面，可以省去不少麻烦，在setting中绑定个人github账号后，
创建username.github.com的项目，拷贝jekyll bootstrap的代码到该目录，commit,sync都有图形化界面&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这个也不需过多说明，直接按Linux来打造Mac，让在Mac上开发与Linux无异&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.sublimetext.com/2&quot;&gt;Sublime Text&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这里不讨论Mac上到底用什么编辑器更好，只说明Sublime Text是个不错的选择，安装Markdown相关插件，
编辑Markdown相当犀利，高尚显示，直接Ctrl+B还可以直接浏览器预览 ^_^&lt;/p&gt;

&lt;p&gt;好了，下面开始重点&lt;/p&gt;

&lt;h3 id=&quot;jekyll&quot;&gt;搭建本地的Jekyll环境&lt;/h3&gt;

&lt;h4 id=&quot;macruby&quot;&gt;安装准备，更新Mac的Ruby&lt;/h4&gt;

&lt;p&gt;Mac 10.7自带的Ruby版本为1.8.6，使用其gem安装Jekyll后会有若干莫名其妙的错误，
其原因还是我们的Jekyll需要1.9.2+才行，还是自行安装新版本解决来的快些。
&lt;a href=&quot;http://www.chenzixin.com/program/2013/03/06/mac-jekyll-install-log/&quot;&gt;Mac OS X 安装 Jekyll 记录&lt;/a&gt;
文档教的方法是使用rvm，这里对于不懂Ruby的人来说，我也不想去装rvm，还是使用&lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;来搞定吧&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ brew install ruby&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;默认安装Ruby的最新版本2.1，教程说是最好是1.9.3版本，这里经实验2.1也是没有问题的。&lt;/p&gt;

&lt;h4 id=&quot;jekyll-1&quot;&gt;安装本地jekyll&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;$ sudo gem install jekyll&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;这里要使用sudo，至于为什么，你可以试试不带sudo进行安装，看看提示就明白了。安装完成后会有一个提示，
这里没有拷贝下来，大体意思就是gem的工具没link到执行目录，可以通过&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ which jekyll&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;验证一下，发现查无其人(jekyll)。使用其提示的方法&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;sh&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sudo gem pristine --all --only-executables
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;which jekyll
/usr/local/bin/jekyll
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;这样就可以，转到username.github.com目录，&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$ jekyll serve&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;访问127.0.0.1:4000就可以查看jekyll bootstrap的默认blog了&lt;/p&gt;

&lt;h4 id=&quot;github&quot;&gt;同步到GitHub&lt;/h4&gt;

&lt;p&gt;首次在在本地折腾差不多后，使用GitHub for Mac Commit&amp;amp;Sync到GitHub上，就与大家共享文章了。&lt;/p&gt;

&lt;p&gt;新发文章或增加Page时，使用Jekyll Bootstrap提供的小工具很方便，专心写文章吧！&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;这个安装记录写的还真不清楚，按我这个来估计还是不行，还请参考以下文章&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html&quot;&gt;搭建一个免费的，无限流量的Blog—-github Pages和Jekyll入门&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.chenzixin.com/program/2013/03/06/mac-jekyll-install-log/&quot;&gt;Mac OS X 安装 Jekyll 记录&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;Update 2014-04-25&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;最近收到了GitHub发来提示说Maruku过时了，最好把MarkDown的解析器换成Kramdown，于是听话的更新一下。方法如下:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;安装kramdown&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;$ gem install kramdown&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;修改_config.yaml&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;markdown:kramdown&lt;/code&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;重新执行生成网站&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;$ jekyll serve&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;最后就得到错误，说是缺少karmdown。纳尼？明明刚安装成功了啊，重新来过，还是如此。&lt;/p&gt;

&lt;p&gt;没办法，把jekyll都重装，不行&lt;/p&gt;

&lt;p&gt;没办法，把ruby更新，还是不行&lt;/p&gt;

&lt;p&gt;最最后只能放弃了，重新Google了一个，发现了一个好东西，&lt;a href=&quot;https://github.com/github/pages-gem&quot;&gt;GitHub pages-gem&lt;/a&gt;，早知道有这个就不折腾了，一句话结束：&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo gem install github-pages&lt;/code&gt;&lt;/p&gt;

</content>
 </entry>
 
 
</feed>